# coding=utf-8

import difflib

from django.test import TestCase as TestCaseBase
from .scraper import audiojelly, beatport, discogs, itunes, junodownload, metalarchives, musicbrainz, bandcamp
from .result import ReleaseResult, ListResult, NotFoundResult, Result
from .visitor.misc import DescriptionVisitor
from .visitor.api import APIVisitorV1


class TestCase(TestCaseBase):

    maxDiff = None

    def setUp(self):
        self.addTypeEqualityFunc(ReleaseResult, 'assertResultEqual')
        self.addTypeEqualityFunc(ListResult, 'assertResultEqual')
        self.addTypeEqualityFunc(NotFoundResult, 'assertResultEqual')

    def assertResultEqual(self, d1, d2, msg=None):
        self.assertTrue(issubclass(d1.__class__, Result), 'First argument is not a Result')
        self.assertTrue(issubclass(d2.__class__, Result), 'Second argument is not a Result')

        if d1 != d2:
            standardMsg = '%s != %s' % (repr(d1), repr(d2))
            diff = ('\n' + '\n'.join(difflib.ndiff(
                           repr(d1).splitlines(),
                           repr(d2).splitlines())))
            standardMsg = self._truncateMessage(standardMsg, diff)
            self.fail(self._formatMessage(msg, standardMsg))


class DiscogsTest(TestCase):

    def test_simple_album(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('03 Nov 2000')
        release_event.set_country('Germany')
        expected.append_release_event(release_event)

        expected.set_format('CD, Album')

        label_id = expected.create_label_id()
        label_id.set_label(u'Richterskala')
        label_id.append_catalogue_nr(u'TRI 070 CD')
        expected.append_label_id(label_id)

        expected.set_title('Hast Du Mich Vermisst?')

        artist = expected.create_artist()
        artist.set_name('ASP')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre('Electronic')
        expected.append_genre('Rock')

        expected.append_style('Goth Rock')
        expected.append_style('Synth-pop')

        expected.set_url('http://www.discogs.com/ASP-Hast-Du-Mich-Vermisst/release/453432')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Schwarzer Schmetterling')
        track.set_length(290)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Where Do The Gods Go')
        track.set_length(226)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Dancing')
        track.set_length(345)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title(u'K\xfcss Mich')
        track.set_length(311)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Sing Child')
        track.set_length(239)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Teach Me War')
        track.set_length(225)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Imbecile Anthem')
        track.set_length(222)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Und Wir Tanzten (Ungeschickte Liebesbriefe)')
        track.set_length(305)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Blinded')
        track.set_length(443)
        disc.append_track(track)

        expected.append_disc(disc)

        scraper = discogs.ReleaseScraper.from_string('http://www.discogs.com/ASP-Hast-Du-Mich-Vermisst/release/453432')
        result = scraper.get_result()

        self.assertEqual(expected, result)

    def test_multiple_cds(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('25 May 2007')
        release_event.set_country('Germany')
        expected.append_release_event(release_event)

        expected.set_format(u'4 \xd7 CD, Compilation, Limited Edition, Digipak Box Set, Limited Edition, Hand-Numbered')

        label_id = expected.create_label_id()
        label_id.set_label(u'[Trisol] Music Group GmbH')
        label_id.append_catalogue_nr(u'TRI 303 CD')
        expected.append_label_id(label_id)

        expected.set_title("The 'Once In A Lifetime' Recollection Box")

        artist = expected.create_artist()
        artist.set_name('ASP')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        artist = expected.create_artist()
        artist.set_name('Chamber')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre('Classical')
        expected.append_genre('Non-Music')
        expected.append_genre('Rock')

        expected.append_style('Acoustic')
        expected.append_style('Goth Rock')
        expected.append_style('Classical')
        expected.append_style('Speech')

        expected.set_url('http://www.discogs.com/ASP-Chamber-The-Once-In-A-Lifetime-Recollection-Box/release/977684')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Once In A Lifetime, Part 1')
        track.set_length(351)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title("A Dead Man's Song")
        track.set_length(312)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Versuchung')
        track.set_length(345)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Torn')
        track.set_length(304)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Demon Love')
        track.set_length(272)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('The Paperhearted Ghost')
        track.set_length(283)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('A Tale Of Real Love')
        track.set_length(316)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Hunger')
        track.set_length(289)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('The Truth About Snow-White')
        track.set_length(240)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('She Wore Shadows')
        track.set_length(275)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Und Wir Tanzten (Ungeschickte Liebesbriefe)')
        track.set_length(317)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Once In A Lifetime, Part 2 (Reprise)')
        track.set_length(164)
        disc.append_track(track)

        expected.append_disc(disc)

        disc = expected.create_disc()
        disc.set_number(2)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title(u'K\xfcss Mich')
        track.set_length(384)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Silence - Release')
        track.set_length(225)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Solitude')
        track.set_length(220)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Die Ballade Von Der Erweckung')
        track.set_length(527)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Another Conversation')
        track.set_length(201)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Sing Child')
        track.set_length(449)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Ich Will Brennen')
        track.set_length(300)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Toscana')
        track.set_length(374)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Ride On')
        track.set_length(222)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Hometown')
        track.set_length(181)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Werben')
        track.set_length(293)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Once In A Lifetime, Part 3 (Finale)')
        track.set_length(608)
        disc.append_track(track)

        expected.append_disc(disc)

        disc = expected.create_disc()
        disc.set_number(3)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title(u'H\xe4sslich')
        track.set_length(145)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Backstage (All Areas)')
        track.set_length(573)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title(u'Paracetamoltr\xe4ume')
        track.set_length(517)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title(u'Ausszug Aus "Tremendista" Feat. Ralph M\xfcller/Gitarre')
        track.set_length(1473)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Campari O')
        track.set_length(159)
        disc.append_track(track)

        expected.append_disc(disc)

        disc = expected.create_disc()
        disc.set_number(4)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Asp, Soundcheck-Outtake: "Sicamore Trees"')
        track.set_length(94)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Demon Love')
        track.set_length(275)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('The Truth About Snow-White')
        track.set_length(274)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('She Wore Shadows')
        track.set_length(319)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Sing Child')
        track.set_length(469)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Hometown')
        track.set_length(221)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Hunger')
        track.set_length(274)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Silence-Release')
        track.set_length(208)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Asp, Soundcheck-Outtake: "She Moved Through The Fair"')
        track.set_length(120)
        disc.append_track(track)

        expected.append_disc(disc)

        scraper = discogs.ReleaseScraper.from_string('http://www.discogs.com/ASP-Chamber-The-Once-In-A-Lifetime-Recollection-Box/release/977684')
        result = scraper.get_result()

        self.assertEqual(expected, result)

    def test_featuring_track_artist(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('01 Apr 2011')
        release_event.set_country('Europe')
        expected.append_release_event(release_event)

        expected.set_format('CD, Album')

        label_id = expected.create_label_id()
        label_id.set_label(u'Rootdown Records')
        label_id.append_catalogue_nr(u'RDM13074-2')
        expected.append_label_id(label_id)

        expected.set_title('Unter Freunden')

        artist = expected.create_artist()
        artist.set_name('Mono & Nikitaman')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre('Reggae')

        expected.append_style('Dancehall')

        expected.set_url('http://www.discogs.com/Mono-Nikitaman-Unter-Freunden/release/3432154')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Intro')
        track.set_length(13)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Unter Freunden')
        track.set_length(184)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Karma')
        track.set_length(189)
        track_artist = expected.create_artist()
        track_artist.set_name("Ce'cile")
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.FEATURING)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Zeit Steht Still')
        track.set_length(260)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Komplizen')
        track.set_length(185)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Wenn Sich Der Nebel Verzieht')
        track.set_length(197)
        track_artist = expected.create_artist()
        track_artist.set_name('Gentleman')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.FEATURING)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Schwerelos')
        track.set_length(227)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Ein Paar Meter')
        track.set_length(198)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Cash')
        track.set_length(188)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Dezibel')
        track.set_length(270)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Kontrast')
        track.set_length(214)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title(u'R\xfcckkehr Der Clowns')
        track.set_length(198)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title('Superstar')
        track.set_length(227)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('14')
        track.set_title('Underground')
        track.set_length(204)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('15')
        track.set_title('Showdown')
        track.set_length(261)
        track_artist = expected.create_artist()
        track_artist.set_name('Rebellion')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.FEATURING)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        scraper = discogs.ReleaseScraper.from_string('http://www.discogs.com/Mono-Nikitaman-Unter-Freunden/release/3432154')
        result = scraper.get_result()

        self.assertEqual(expected, result)

    def test_remix_track_artist(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('01 Jul 2005')
        release_event.set_country('Germany')
        expected.append_release_event(release_event)

        expected.set_format('CD, Album, Limited Edition, Digibook CD, Compilation, Limited Edition')

        label_id = expected.create_label_id()
        label_id.set_label(u'[Trisol] Music Group GmbH')
        label_id.append_catalogue_nr(u'TRI 231 CD')
        expected.append_label_id(label_id)

        expected.set_title('Aus Der Tiefe')

        artist = expected.create_artist()
        artist.set_name('ASP')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre('Electronic')
        expected.append_genre('Rock')

        expected.append_style('Alternative Rock')

        expected.set_url('http://www.discogs.com/ASP-Aus-Der-Tiefe-Der-Schwarze-Schmetterling-IV/release/710517')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title(u'Beschw\xf6rung')
        track.set_length(391)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title(u'Willkommen Zur\xfcck')
        track.set_length(137)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Schwarzes Blut')
        track.set_length(212)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Im Dunklen Turm')
        track.set_length(101)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Me')
        track.set_length(278)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Schattenschreie')
        track.set_length(21)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Hunger')
        track.set_length(321)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Fremde Erinnerungen')
        track.set_length(72)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Ballade Von Der Erweckung')
        track.set_length(533)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Tiefenrausch')
        track.set_length(245)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Schmetterling, Du Kleines Ding')
        track.set_length(42)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Ich Komm Dich Holn')
        track.set_length(257)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title('Werben')
        track.set_length(268)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('14')
        track.set_title('Aus Der Tiefe')
        track.set_length(198)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('15')
        track.set_title('Spiegelaugen')
        track.set_length(204)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('16')
        track.set_title('Tiefenrausch (Reprise)')
        track.set_length(67)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('17')
        track.set_title('Panik')
        track.set_length(252)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('18')
        track.set_title('Spiegel')
        track.set_length(331)
        disc.append_track(track)

        expected.append_disc(disc)

        disc = expected.create_disc()
        disc.set_number(2)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Schwarzes Blut (Haltung Version)')
        track.set_length(249)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Werben (Subtil Edit)')
        track.set_length(257)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Me (Single Version)')
        track.set_length(225)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Tiefenrausch (Feat. Sara Noxx)')
        track.set_length(245)
        track_artist = expected.create_artist()
        track_artist.set_name('Sara Noxx')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.FEATURING)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Hunger (Single Mix)')
        track.set_length(259)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Panik (Ganz Rauf-Verison)')
        track.set_length(273)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title(u'Beschw\xf6rung (Siegeszug Instrumental)')
        track.set_length(205)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Buch Des Vergessens (Unreines Spiegelsonett)')
        track.set_length(115)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Kokon (Brandneu-Remix Von Umbra Et Imago)')
        track.set_length(279)
        track_artist = expected.create_artist()
        track_artist.set_name('Umbra Et Imago')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.REMIXER)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Me (Me And You Remix Von Blutengel)')
        track.set_length(344)
        track_artist = expected.create_artist()
        track_artist.set_name('Blutengel')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.REMIXER)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Und Wir Tanzten (Ungeschickte Liebesbriefe) (Live)')
        track.set_length(347)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Ich Will Brennen (Live)')
        track.set_length(369)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title('Starfucker: In Der Folterkammer')
        track.set_length(127)
        disc.append_track(track)

        expected.append_disc(disc)

        scraper = discogs.ReleaseScraper.from_string('http://www.discogs.com/ASP-Aus-Der-Tiefe-Der-Schwarze-Schmetterling-IV/release/710517')
        result = scraper.get_result()

        self.assertEqual(expected, result)

    def test_vinyl(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('2008')
        release_event.set_country('Germany')
        expected.append_release_event(release_event)

        expected.set_format(u'2 \xd7 Vinyl, LP')

        label_id = expected.create_label_id()
        label_id.set_label(u'Rootdown Records')
        label_id.append_catalogue_nr(u'RDM 13051-1')
        expected.append_label_id(label_id)

        expected.set_title('Ausser Kontrolle')

        artist = expected.create_artist()
        artist.set_name('Mono & Nikitaman')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre('Reggae')

        expected.append_style('Dancehall')
        expected.append_style('Reggae-Pop')

        expected.set_url('http://www.discogs.com/Mono-Nikitaman-Ausser-Kontrolle/release/1540929')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('A1')
        track.set_title('Intro')
        track.set_length(None)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('A2')
        track.set_title('Schlag Alarm')
        track.set_length(None)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('A3')
        track.set_title('Kann Ja Mal Passieren')
        track.set_length(None)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('A4')
        track.set_title('Ausser Kontrolle')
        track.set_length(None)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('A5')
        track.set_title("Hol's Dir")
        track.set_length(None)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('B1')
        track.set_title('Das Alles')
        track.set_length(None)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('B2')
        track.set_title('Digge Digge')
        track.set_length(None)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('B3')
        track.set_title('Nur So')
        track.set_length(None)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('B4')
        track.set_title('Yeah')
        track.set_length(None)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('C1')
        track.set_title('Von Osten Bis Westen')
        track.set_length(None)
        track_artist = expected.create_artist()
        track_artist.set_name('Russkaja')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.FEATURING)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('C2')
        track.set_title('Wenn Ihr Schlaft')
        track.set_length(None)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('C3')
        track.set_title('Unterwegs')
        track.set_length(None)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('C4')
        track.set_title('Tiktak')
        track.set_length(None)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('D1')
        track.set_title('Tut Mir Leid')
        track.set_length(None)
        track_artist = expected.create_artist()
        track_artist.set_name('Nosliw')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.FEATURING)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('D2')
        track.set_title('Es Kommt Anders')
        track.set_length(None)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('D3')
        track.set_title('Das Alles (Zion Train Remix)')
        track.set_length(None)
        track_artist = expected.create_artist()
        track_artist.set_name('Zion Train')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.REMIXER)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        s = discogs.ReleaseScraper.from_string('http://www.discogs.com/Mono-Nikitaman-Ausser-Kontrolle/release/1540929')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_featuring_main_artist(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('08 Feb 2011')
        release_event.set_country('Germany')
        expected.append_release_event(release_event)

        expected.set_format(u'3 \xd7 File, MP3, 320 kbps')

        label_id = expected.create_label_id()
        label_id.set_label(u'Redux Recordings')
        label_id.append_catalogue_nr(u'RDX062')
        expected.append_label_id(label_id)

        expected.set_title('In My Dreams')

        artist = expected.create_artist()
        artist.set_name('Lifted Emotion')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        artist = expected.create_artist()
        artist.set_name('Anastasiia Purple')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.FEATURING)
        expected.append_release_artist(artist)

        expected.append_genre('Electronic')

        expected.append_style('Trance')

        expected.set_url('http://www.discogs.com/Lifted-Emotion-feat-Anastasiia-Purple-In-My-Dreams/release/2806179')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('In My Dreams (Original Vocal Mix)')
        track.set_length(558)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('In My Dreams (Original Dub Mix)')
        track.set_length(558)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('In My Dreams (Ost & Meyer Extraodinary Mix)')
        track.set_length(472)
        track_artist = expected.create_artist()
        track_artist.set_name('Ost & Meyer')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.REMIXER)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        s = discogs.ReleaseScraper.from_string('http://www.discogs.com/Lifted-Emotion-feat-Anastasiia-Purple-In-My-Dreams/release/2806179')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_various_artists(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('2010')
        release_event.set_country('Germany')
        expected.append_release_event(release_event)

        expected.set_format('CD, Compilation')

        label_id = expected.create_label_id()
        label_id.set_label(u'Batbeliever Releases')
        label_id.append_catalogue_nr(u'BAT 075')
        expected.append_label_id(label_id)

        expected.set_title('Gothic File 14')

        artist = expected.create_artist()
        artist.set_name(None)
        artist.set_various(True)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre('Electronic')
        expected.append_genre('Rock')

        expected.append_style('EBM')
        expected.append_style('Darkwave')
        expected.append_style('Industrial')
        expected.append_style('Goth Rock')
        expected.append_style('Electro')

        expected.set_url('http://www.discogs.com/Various-Gothic-File-14/release/3700493')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Echo In Me')
        track.set_length(236)
        track_artist = expected.create_artist()
        track_artist.set_name('Diary Of Dreams')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Liar (Version)')
        track.set_length(219)
        track_artist = expected.create_artist()
        track_artist.set_name('Gothminister')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('The End Of It All (Edit)')
        track.set_length(237)
        track_artist = expected.create_artist()
        track_artist.set_name('Sirenia')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Sanctuary')
        track.set_length(239)
        track_artist = expected.create_artist()
        track_artist.set_name('Merciful Nuns')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Worlds Collide (Demo Version)')
        track.set_length(261)
        track_artist = expected.create_artist()
        track_artist.set_name('Covenant')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Drowning World')
        track.set_length(253)
        track_artist = expected.create_artist()
        track_artist.set_name('Ien Oblique')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('In The Name Of God')
        track.set_length(297)
        track_artist = expected.create_artist()
        track_artist.set_name('Betamorphose')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('PsychoCop (Folge 8)')
        track.set_length(171)
        track_artist = expected.create_artist()
        track_artist.set_name('Don Harris')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        s = discogs.ReleaseScraper.from_string('http://www.discogs.com/Various-Gothic-File-14/release/3700493')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_label_with_suffix(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('25 Nov 2005')
        release_event.set_country('Germany')
        expected.append_release_event(release_event)

        expected.set_format('CD, Album')

        label_id = expected.create_label_id()
        label_id.set_label(u'Indigo')
        label_id.append_catalogue_nr(u'CD 55182')
        expected.append_label_id(label_id)

        expected.set_title('Prima Nocte')

        artist = expected.create_artist()
        artist.set_name('Feuerschwanz')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre('Folk')
        expected.append_genre('World')
        expected.append_genre('Country')
        expected.append_genre('Rock')

        expected.append_style('Medieval')

        expected.set_url('http://www.discogs.com/Feuerschwanz-Prima-Nocte/release/2611694')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Es War Einmal')
        track.set_length(172)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Das Mittelalter')
        track.set_length(260)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Drachentanz')
        track.set_length(224)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Das Turnier')
        track.set_length(254)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Prima Nocte')
        track.set_length(331)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title(u'B\xe4rentanz')
        track.set_length(232)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Herren Der Winde')
        track.set_length(265)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Der Teufel')
        track.set_length(290)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Schneewittchen')
        track.set_length(377)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Der Traum')
        track.set_length(319)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title(u'R\xe4uber')
        track.set_length(206)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Sauflied')
        track.set_length(234)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title('Teufelsgeschenk')
        track.set_length(264)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('14')
        track.set_title(u'La\xdft Die Ritter Schlafen')
        track.set_length(313)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('15')
        track.set_title('Gute Nacht')
        track.set_length(420)
        disc.append_track(track)

        expected.append_disc(disc)

        s = discogs.ReleaseScraper.from_string('http://www.discogs.com/Feuerschwanz-Prima-Nocte/release/2611694')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_album_with_unicode_dash_in_title(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('25 Jun 2012')
        release_event.set_country('UK')
        expected.append_release_event(release_event)

        expected.set_format('CD, Album')

        label_id = expected.create_label_id()
        label_id.set_label(u'Ash International')
        label_id.append_catalogue_nr(u'Ash 9.5')
        expected.append_label_id(label_id)

        expected.set_title(u'AUN \u2013 The Beginning And The End Of All Things')

        artist = expected.create_artist()
        artist.set_name('Christian Fennesz')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre('Electronic')
        expected.append_genre('Stage & Screen')

        expected.append_style('Soundtrack')
        expected.append_style('Abstract')
        expected.append_style('Ambient')

        expected.set_url('http://www.discogs.com/Christian-Fennesz-AUN-The-Beginning-And-The-End-Of-All-Things/release/2881000')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Kae')
        track.set_length(None)
        track_artist = expected.create_artist()
        track_artist.set_name('Christian Fennesz')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Aware')
        track.set_length(None)
        track_artist = expected.create_artist()
        track_artist.set_name('Fennesz Sakamoto')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Haru')
        track.set_length(None)
        track_artist = expected.create_artist()
        track_artist.set_name('Fennesz Sakamoto')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Sekai')
        track.set_length(None)
        track_artist = expected.create_artist()
        track_artist.set_name('Christian Fennesz')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Euclides')
        track.set_length(None)
        track_artist = expected.create_artist()
        track_artist.set_name('Christian Fennesz')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Sasazuka')
        track.set_length(None)
        track_artist = expected.create_artist()
        track_artist.set_name('Christian Fennesz')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Trace')
        track.set_length(None)
        track_artist = expected.create_artist()
        track_artist.set_name('Fennesz Sakamoto')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Mori')
        track.set_length(None)
        track_artist = expected.create_artist()
        track_artist.set_name('Christian Fennesz')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('AUN40')
        track.set_length(None)
        track_artist = expected.create_artist()
        track_artist.set_name('Christian Fennesz')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Namuru')
        track.set_length(None)
        track_artist = expected.create_artist()
        track_artist.set_name('Christian Fennesz')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Himitsu')
        track.set_length(None)
        track_artist = expected.create_artist()
        track_artist.set_name('Christian Fennesz')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('AUN80')
        track.set_length(None)
        track_artist = expected.create_artist()
        track_artist.set_name('Christian Fennesz')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title('Nympha')
        track.set_length(None)
        track_artist = expected.create_artist()
        track_artist.set_name('Christian Fennesz')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('14')
        track.set_title('Shinu')
        track.set_length(None)
        track_artist = expected.create_artist()
        track_artist.set_name('Christian Fennesz')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('15')
        track.set_title('Hikari')
        track.set_length(None)
        track_artist = expected.create_artist()
        track_artist.set_name('Christian Fennesz')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        s = discogs.ReleaseScraper.from_string('http://www.discogs.com/Christian-Fennesz-AUN-The-Beginning-And-The-End-Of-All-Things/release/2881000')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_master_release(self):
        expected = ListResult()
        expected.set_scraper_name(None)

        item = expected.create_item()
        item.set_name(u'Mystic Matt & Anthill Mob \u2013 Burning')
        item.set_info(u'(10", Pic, Ltd) | Love Peace And Unity Recordings | LOVE-03 | UK | 1997')
        item.set_query('http://www.discogs.com/Mystic-Matt-Anthill-Mob-Burning/release/146468')
        item.set_url('http://www.discogs.com/Mystic-Matt-Anthill-Mob-Burning/release/146468')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Mystic Matt & Anthill Mob \u2013 Burning')
        item.set_info(u'(10", Pic, Ltd, S/Sided) | Love Peace And Unity Recordings | LOVE-03 | UK | 1997')
        item.set_query('http://www.discogs.com/Mystic-Matt-Anthill-Mob-Burning/release/1503116')
        item.set_url('http://www.discogs.com/Mystic-Matt-Anthill-Mob-Burning/release/1503116')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u"Mystic Matt & Anthill Mob \u2013 'Burnin (Let The Music)'")
        item.set_info(u'(12") | Classic Confetti | CC 02 (2) | UK | 2001')
        item.set_query('http://www.discogs.com/Anthill-Mob-Burnin-Let-The-Music/release/284437')
        item.set_url('http://www.discogs.com/Anthill-Mob-Burnin-Let-The-Music/release/284437')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Mystic Matt & Anthill Mob \u2013 Burnin')
        item.set_info(u'(12") | Classic Confetti | CC 02 | UK | 2001')
        item.set_query('http://www.discogs.com/Anthill-Mob-Burnin/release/149302')
        item.set_url('http://www.discogs.com/Anthill-Mob-Burnin/release/149302')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Mystic Matt & Anthill Mob \u2013 Burnin')
        item.set_info(u'(12", Promo) | Classic Confetti | CC 02 | UK | 2001')
        item.set_query('http://www.discogs.com/Anthill-Mob-Burnin/release/2093234')
        item.set_url('http://www.discogs.com/Anthill-Mob-Burnin/release/2093234')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Mystic Matt & Anthill Mob \u2013 Burnin')
        item.set_info(u'(12") | Classic Confetti | CC02(3F/02) | UK & Europe | 2002')
        item.set_query('http://www.discogs.com/Antill-Mob-Burnin/release/739159')
        item.set_url('http://www.discogs.com/Antill-Mob-Burnin/release/739159')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Mystic Matt & Anthill Mob \u2013 Burning')
        item.set_info(u'(12", Ltd, Pic) | Love Peace And Unity Recordings | LOVE-06 | UK | 2006')
        item.set_query('http://www.discogs.com/Mystic-Matt--Anthill-Mob-Burning/release/670448')
        item.set_url('http://www.discogs.com/Mystic-Matt--Anthill-Mob-Burning/release/670448')
        expected.append_item(item)

        s = discogs.MasterScraper.from_string('http://www.discogs.com/Mystic-Matt-Anthill-Mob-Burning/master/181860')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_404(self):
        expected = NotFoundResult()
        expected.set_scraper_name(None)

        s = discogs.ReleaseScraper.from_string('http://www.discogs.com/Various-Gothic-File-14/release/999999999')
        r = s.get_result()

        self.assertEqual(expected, r)


class MusicbrainzTest(TestCase):

    def test_simple_album(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('2004-09-23')
        release_event.set_country('Germany')
        expected.append_release_event(release_event)

        expected.set_format('CD, Album')

        label_id = expected.create_label_id()
        label_id.set_label('Trisol')
        label_id.append_catalogue_nr('TRI 070 CD')
        expected.append_label_id(label_id)

        expected.set_title('Hast Du mich vermisst? Der schwarze Schmetterling, Teil I')

        artist = expected.create_artist()
        artist.set_name('ASP')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)



        expected.set_url('http://musicbrainz.org/release/e008606b-a1c9-48ab-8011-5dbf8b874f1b')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Intro: In meiner Vorstellung')
        track.set_length(274)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Schwarzer Schmetterling')
        track.set_length(290)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Where Do the Gods Go')
        track.set_length(226)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Dancing')
        track.set_length(345)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title(u'K\xfcss mich')
        track.set_length(311)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Sing Child')
        track.set_length(238)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Teach Me War')
        track.set_length(225)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Imbecile Anthem')
        track.set_length(222)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Und wir tanzten (Ungeschickte Liebesbriefe)')
        track.set_length(304)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Blinded')
        track.set_length(444)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Where Do the Gods Go (re-unleashed club edit)')
        track.set_length(279)
        disc.append_track(track)

        expected.append_disc(disc)

        s = musicbrainz.ReleaseScraper.from_string('http://musicbrainz.org/release/e008606b-a1c9-48ab-8011-5dbf8b874f1b')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_multiple_cds(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('2007-05-25')
        release_event.set_country('Germany')
        expected.append_release_event(release_event)

        expected.set_format(u'4\xd7CD, Album + Live')

        label_id = expected.create_label_id()
        label_id.set_label('Trisol')
        label_id.append_catalogue_nr('TRI 303 CD')
        expected.append_label_id(label_id)

        expected.set_title('Once in a Lifetime')

        artist = expected.create_artist()
        artist.set_name('ASP')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        artist = expected.create_artist()
        artist.set_name('Chamber')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.set_url('http://musicbrainz.org/release/79de4a0c-b469-4dfd-b23c-129462b741fb')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Once in a Lifetime, Part 1')
        track.set_length(351)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title(u'A Dead Man\u2019s Song')
        track.set_length(312)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Versuchung')
        track.set_length(345)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Torn')
        track.set_length(304)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Demon Love')
        track.set_length(272)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('The Paperhearted Ghost')
        track.set_length(283)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('A Tale of Real Love')
        track.set_length(316)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Hunger')
        track.set_length(289)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('The Truth About Snow-White')
        track.set_length(240)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('She Wore Shadows')
        track.set_length(276)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Und wir tanzten (Ungeschickte Liebesbriefe)')
        track.set_length(317)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Once in a Lifetime, Part 2 (reprise)')
        track.set_length(164)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        disc = expected.create_disc()
        disc.set_number(2)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title(u'K\xfcss mich')
        track.set_length(384)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Silence - Release')
        track.set_length(225)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Solitude')
        track.set_length(220)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Die Ballade von der Erweckung')
        track.set_length(527)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Another Conversation')
        track.set_length(201)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Sing Child')
        track.set_length(449)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Ich will brennen')
        track.set_length(300)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Toscana')
        track.set_length(374)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Ride On')
        track.set_length(222)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Hometown')
        track.set_length(181)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Werben')
        track.set_length(293)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Once in a Lifetime, Part 3 (Finale)')
        track.set_length(608)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        disc = expected.create_disc()
        disc.set_number(3)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title(u'H\xe4sslich')
        track.set_length(145)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Backstage (All Areas)')
        track.set_length(573)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title(u'Paracetamoltr\xe4ume')
        track.set_length(517)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title(u'Auszug aus \u201eTremendista\u201c')
        track.set_length(1473)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Ralph M\xfcller')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.FEATURING)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Campari O')
        track.set_length(159)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        disc = expected.create_disc()
        disc.set_number(4)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Sicamore Trees (ASP soundcheck out-take)')
        track.set_length(94)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Demon Love')
        track.set_length(275)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('The Truth About Snow-White')
        track.set_length(275)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('She Wore Shadows')
        track.set_length(319)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Sing Child')
        track.set_length(469)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Hometown')
        track.set_length(221)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Hunger')
        track.set_length(274)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Silence - Release')
        track.set_length(208)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('She Moved Through the Fair (ASP soundcheck out-take)')
        track.set_length(120)
        track_artist = expected.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        s = musicbrainz.ReleaseScraper.from_string('http://musicbrainz.org/release/79de4a0c-b469-4dfd-b23c-129462b741fb')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_various_artists(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('2010')
        release_event.set_country('Germany')
        expected.append_release_event(release_event)

        expected.set_format('CD, Album + Compilation')

        label_id = expected.create_label_id()
        label_id.set_label('Batbeliever Releases')
        label_id.append_catalogue_nr('BAT 065')
        expected.append_label_id(label_id)

        expected.set_title('Gothic File 11')

        artist = expected.create_artist()
        artist.set_name(None)
        artist.set_various(True)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.set_url('http://musicbrainz.org/release/9d78a55c-0eee-4b61-b6eb-b69765c37740')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Carrie Satan')
        track.set_length(312)
        track_artist = expected.create_artist()
        track_artist.set_name('Spectra Paris')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Countdown')
        track.set_length(253)
        track_artist = expected.create_artist()
        track_artist.set_name('Absurd Minds')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title(u'M\xe4dchen in Uniform (Faderhead remix)')
        track.set_length(233)
        track_artist = expected.create_artist()
        track_artist.set_name('Nachtmahr')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Fucking Invective')
        track.set_length(273)
        track_artist = expected.create_artist()
        track_artist.set_name('Noisuf-X')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Loyal to My Hate (Solar Fake remix)')
        track.set_length(264)
        track_artist = expected.create_artist()
        track_artist.set_name(':wumpscut:')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Melancholie (382edit)')
        track.set_length(232)
        track_artist = expected.create_artist()
        track_artist.set_name('KiEw')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Gegen die Welt')
        track.set_length(287)
        track_artist = expected.create_artist()
        track_artist.set_name('Mantus')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title("Ready or Not (I'm Coming)")
        track.set_length(202)
        track_artist = expected.create_artist()
        track_artist.set_name('Oomph!')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('What?')
        track.set_length(166)
        track_artist = expected.create_artist()
        track_artist.set_name('Rob Zombie')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Ebenbild (Die Krupps remix)')
        track.set_length(343)
        track_artist = expected.create_artist()
        track_artist.set_name('Megaherz')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Vergissmeinnicht (live)')
        track.set_length(239)
        track_artist = expected.create_artist()
        track_artist.set_name('Eisbrecher')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Industrypeople')
        track.set_length(254)
        track_artist = expected.create_artist()
        track_artist.set_name('Zeromancer')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title('Kick the Bass')
        track.set_length(222)
        track_artist = expected.create_artist()
        track_artist.set_name('Julien-K')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('14')
        track.set_title('Black Hole')
        track.set_length(325)
        track_artist = expected.create_artist()
        track_artist.set_name('Nosferatu')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('15')
        track.set_title('Swimming in Dirty Water')
        track.set_length(264)
        track_artist = expected.create_artist()
        track_artist.set_name('Die Art')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('16')
        track.set_title('Wreckhouse Stomp')
        track.set_length(184)
        track_artist = expected.create_artist()
        track_artist.set_name('Mad Sin')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        s = musicbrainz.ReleaseScraper.from_string('http://musicbrainz.org/release/9d78a55c-0eee-4b61-b6eb-b69765c37740')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_disc_titles(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('2008')
        release_event.set_country('Europe')
        expected.append_release_event(release_event)

        expected.set_format(u'5\xd7CD, Album + Compilation')

        label_id = expected.create_label_id()
        label_id.set_label('Epic')
        label_id.append_catalogue_nr('88697304842')
        expected.append_label_id(label_id)

        expected.set_title('Original Album Classics')

        artist = expected.create_artist()
        artist.set_name('The Isley Brothers')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.set_url('http://musicbrainz.org/release/12c94a0f-828f-4ab3-8e0d-dfe4599dc310')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(u'The Brothers: Isley')

        track = disc.create_track()
        track.set_number('1')
        track.set_title('I Turned You On')
        track.set_length(158)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Vacuum Cleaner')
        track.set_length(176)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('I Got to Get Myself Together')
        track.set_length(218)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Was It Good to You?')
        track.set_length(164)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('The Blacker the Berry (a.k.a. Black Berries)')
        track.set_length(353)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('My Little Girl')
        track.set_length(221)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Get Down Off of the Train')
        track.set_length(192)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Holding On')
        track.set_length(156)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Feels Like the World')
        track.set_length(206)
        disc.append_track(track)

        expected.append_disc(disc)

        disc = expected.create_disc()
        disc.set_number(2)
        disc.set_title(u'Get Into Something')

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Get Into Something')
        track.set_length(450)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Freedom')
        track.set_length(218)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Take Inventory')
        track.set_length(167)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title("Keep on Doin'")
        track.set_length(242)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Girls Will Be Girls')
        track.set_length(171)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('I Need You So')
        track.set_length(265)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('If He Can You Can')
        track.set_length(225)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('I Got to Find Me One')
        track.set_length(278)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Beautiful')
        track.set_length(186)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Bless Your Heart')
        track.set_length(183)
        disc.append_track(track)

        expected.append_disc(disc)

        disc = expected.create_disc()
        disc.set_number(3)
        disc.set_title(u"Givin' It Back")

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Ohio - Machine Gun')
        track.set_length(554)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Fire and Rain')
        track.set_length(329)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Lay Lady Lay')
        track.set_length(622)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Spill the Wine')
        track.set_length(392)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Nothing to Do But Today')
        track.set_length(219)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Cold Bologna')
        track.set_length(179)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title("Love the One You're With")
        track.set_length(219)
        disc.append_track(track)

        expected.append_disc(disc)

        disc = expected.create_disc()
        disc.set_number(4)
        disc.set_title(u'Brother, Brother, Brother')

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Brother, Brother')
        track.set_length(197)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Put A Little Love In Your Heart')
        track.set_length(182)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title("Sweet Season / Keep On Walkin'")
        track.set_length(313)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Work To Do')
        track.set_length(192)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Pop That Thang')
        track.set_length(174)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Lay Away')
        track.set_length(203)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title("It's Too Late")
        track.set_length(631)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Love Put Me On The Corner')
        track.set_length(390)
        disc.append_track(track)

        expected.append_disc(disc)

        disc = expected.create_disc()
        disc.set_number(5)
        disc.set_title(u'3 + 3')

        track = disc.create_track()
        track.set_number('1')
        track.set_title('That Lady, Parts 1 & 2')
        track.set_length(335)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title("Don't Let Me Be Lonely Tonight")
        track.set_length(239)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('If You Were There')
        track.set_length(203)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('You Walk Your Way')
        track.set_length(186)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Listen to the Music')
        track.set_length(246)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('What It Comes Down To')
        track.set_length(234)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Sunshine (Go Away Today)')
        track.set_length(262)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Summer Breeze')
        track.set_length(372)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('The Highways of My Life')
        track.set_length(293)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('That Lady (live)')
        track.set_length(222)
        disc.append_track(track)

        expected.append_disc(disc)

        s = musicbrainz.ReleaseScraper.from_string('http://musicbrainz.org/release/12c94a0f-828f-4ab3-8e0d-dfe4599dc310')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_special_sub_heading(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('2012-11-16')
        release_event.set_country('Germany')
        expected.append_release_event(release_event)

        expected.set_format(u'2\xd7CD, EP')

        label_id = expected.create_label_id()
        label_id.set_label('Trisol')
        label_id.append_catalogue_nr('TRI 460 CD')
        expected.append_label_id(label_id)

        expected.set_title('Die GeistErfahrer EP: Fremder-Zyklus, Teil 1.1')

        artist = expected.create_artist()
        artist.set_name('ASP')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.set_url('http://musicbrainz.org/release/fc6ee7a8-c70a-4c8f-ab42-43a457a0731f')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('GeistErfahrer')
        track.set_length(360)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('In Sack und Asche')
        track.set_length(440)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title(u'\xdcberH\xe4rte')
        track.set_length(376)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Carpe noctem')
        track.set_length(312)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Weichen(t)stellung (GeistErfahrer Reprise)')
        track.set_length(274)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Danach')
        track.set_length(516)
        disc.append_track(track)

        expected.append_disc(disc)

        disc = expected.create_disc()
        disc.set_number(2)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Sing Child')
        track.set_length(404)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Duett (Minnelied der Incubi)')
        track.set_length(251)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Krabat')
        track.set_length(358)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Unverwandt')
        track.set_length(667)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Werben')
        track.set_length(440)
        disc.append_track(track)

        expected.append_disc(disc)

        s = musicbrainz.ReleaseScraper.from_string('http://musicbrainz.org/release/fc6ee7a8-c70a-4c8f-ab42-43a457a0731f')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_release_group(self):
        expected = ListResult()
        expected.set_scraper_name(None)

        item = expected.create_item()
        item.set_name(u'ASP, Chamber \u2013 Humility')
        item.set_info(u'CD | 8 | 2006-04-21 | DE | Trisol | TRI 273 CD | 4260063942730')
        item.set_query('http://musicbrainz.org/release/58bad121-bfab-4dda-89f8-4b1bc092de44')
        item.set_url('http://musicbrainz.org/release/58bad121-bfab-4dda-89f8-4b1bc092de44')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'ASP, Chamber \u2013 Humility: Die verschollenen Archive 2')
        item.set_info(u'CD | 7 | 2012-03-09 | DE | Trisol | 4260063944505')
        item.set_query('http://musicbrainz.org/release/c2834b8b-77c4-4505-9b55-a31208eb98c3')
        item.set_url('http://musicbrainz.org/release/c2834b8b-77c4-4505-9b55-a31208eb98c3')
        expected.append_item(item)

        s = musicbrainz.ReleaseGroupScraper.from_string('http://musicbrainz.org/release-group/9c8ec90f-dcef-3fc7-904d-27f535454e44')
        r = s.get_result()

        self.assertEqual(expected, r)


    def test_404(self):
        expected = NotFoundResult()
        expected.set_scraper_name(None)

        s = musicbrainz.ReleaseScraper.from_string('http://musicbrainz.org/release/12345-abcdefg')
        r = s.get_result()

        self.assertEqual(expected, r)


class BeatportTest(TestCase):

    def test_simple_album(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date(u'2007-01-22')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format(None)

        label_id = expected.create_label_id()
        label_id.set_label(u'Playhouse')
        label_id.append_catalogue_nr(u'PLAY131')
        expected.append_label_id(label_id)

        expected.set_title(u'Love Love Love Yeah')

        artist = expected.create_artist()
        artist.set_name(u'Rework')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre(u'Electro House')
        expected.append_genre(u'DJ Tools')

        expected.set_url('http://www.beatport.com/release/love-love-love-yeah/43577')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title(u'Love Love Love Yeah')
        track.set_length(475)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title(u'Bus Driver')
        track.set_length(187)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title(u'Christiane')
        track.set_length(24)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title(u'So Cold')
        track.set_length(212)
        disc.append_track(track)

        expected.append_disc(disc)

        s = beatport.ReleaseScraper.from_string('http://www.beatport.com/release/love-love-love-yeah/43577')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_remix_track_artist(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date(u'2006-04-19')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format(None)

        label_id = expected.create_label_id()
        label_id.set_label(u'Karatemusik')
        label_id.append_catalogue_nr(u'KM013')
        expected.append_label_id(label_id)

        expected.set_title(u'Love Spy / Love Dies')

        artist = expected.create_artist()
        artist.set_name(u'Polygamy Boys')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre(u'Tech House')
        expected.append_genre(u'Electro House')

        expected.set_url('http://www.beatport.com/release/love-spy-love-dies/27944')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title(u'Love Spy / Love Dies [Error Error Remix]')
        track.set_length(447)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Error Error')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.REMIXER)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title(u'Love Spy / Love Dies')
        track.set_length(427)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title(u'Reply 23')
        track.set_length(418)
        disc.append_track(track)

        expected.append_disc(disc)

        s = beatport.ReleaseScraper.from_string('http://www.beatport.com/release/love-spy-love-dies/27944')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_various_artists(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date(u'2012-01-05')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format(u'Album')

        label_id = expected.create_label_id()
        label_id.set_label(u'Carlo Cavalli Music Group')
        label_id.append_catalogue_nr(u'CMG117')
        expected.append_label_id(label_id)

        expected.set_title(u'DJ Tunes Compilation')

        artist = expected.create_artist()
        artist.set_name(None)
        artist.set_various(True)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre(u'Progressive House')
        expected.append_genre(u'House')
        expected.append_genre(u'Deep House')
        expected.append_genre(u'Minimal')
        expected.append_genre(u'Tech House')

        expected.set_url('http://www.beatport.com/release/dj-tunes-compilation/851318')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title(u'Forever Loved')
        track.set_length(320)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Sam Be-Kay')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title(u'Sweep [Alex Faraci Remix]')
        track.set_length(398)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Eros Locatelli')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Alex Faraci')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.REMIXER)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title(u'Humo Y Neon [David Ahumada Remix]')
        track.set_length(298)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Babette Duwez')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Joel Reichert')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'David Ahumada')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.REMIXER)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title(u'Night Melody [Massimo Russo La Guitarra Remix]')
        track.set_length(377)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Alex Faraci')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Massimo Russo')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.REMIXER)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title(u'30 m [Original mix]')
        track.set_length(393)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Fingers Clear')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title(u'Just Begin')
        track.set_length(429)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Erion Gjuzi')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title(u'Achakkar [Original mix]')
        track.set_length(388)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Dany Cohiba')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title(u'Raveline [Italianbeat Guys Remix]')
        track.set_length(406)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Massimo Russo')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Italianbeat Guys')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.REMIXER)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title(u'Grey 2 Fade feat. Babette Duwez [Jurgen Cecconi Mix]')
        track.set_length(653)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Jurgen Cecconi')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Beethoven Tbs')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title(u'Tanzmania')
        track.set_length(420)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Carlo Cavalli')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        s = beatport.ReleaseScraper.from_string('http://www.beatport.com/release/dj-tunes-compilation/851318')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_404(self):
        expected = NotFoundResult()
        expected.set_scraper_name(None)

        s = beatport.ReleaseScraper.from_string('http://www.beatport.com/release/blubb/123')
        r = s.get_result()

        self.assertEqual(expected, r)


class MetalarchivesTest(TestCase):

    def test_simple_album(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('June 24th, 2002')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format('Full-length')

        label_id = expected.create_label_id()
        label_id.set_label('Spinefarm Records')
        expected.append_label_id(label_id)

        expected.set_title('Century Child')

        artist = expected.create_artist()
        artist.set_name('Nightwish')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.set_url('http://www.metal-archives.com/albums/Nightwish/Century_Child/3719')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Bless the Child')
        track.set_length(372)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('End of all Hope')
        track.set_length(235)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Dead to the World')
        track.set_length(260)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Ever Dream')
        track.set_length(284)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Slaying the Dreamer')
        track.set_length(272)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Forever Yours')
        track.set_length(230)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Ocean Soul')
        track.set_length(255)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Feel for You')
        track.set_length(235)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('The Phantom of the Opera')
        track.set_length(250)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Beauty of the Beast')
        track.set_length(622)
        disc.append_track(track)

        expected.append_disc(disc)

        s = metalarchives.ReleaseScraper.from_string('http://www.metal-archives.com/albums/Nightwish/Century_Child/3719')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_multiple_cds(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('September 22nd, 2008')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format('Live album')

        label_id = expected.create_label_id()
        label_id.set_label('Roadrunner Records')
        expected.append_label_id(label_id)

        expected.set_title('Black Symphony')

        artist = expected.create_artist()
        artist.set_name('Within Temptation')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.set_url('http://www.metal-archives.com/albums/Within_Temptation/Black_Symphony/212779')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Ouverture')
        track.set_length(463)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title("Jillian (I'd Give My Heart)")
        track.set_length(279)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('The Howling')
        track.set_length(391)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Stand My Ground')
        track.set_length(273)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('The Cross')
        track.set_length(322)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('What Have You Done?')
        track.set_length(298)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Hand of Sorrow')
        track.set_length(340)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('The Heart of Everything')
        track.set_length(348)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Forgiven')
        track.set_length(293)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Somewhere')
        track.set_length(264)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('The Swan Song')
        track.set_length(240)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Memories')
        track.set_length(243)
        disc.append_track(track)

        expected.append_disc(disc)

        disc = expected.create_disc()
        disc.set_number(2)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Our Solemn Hour')
        track.set_length(322)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('The Other Half (Of Me)')
        track.set_length(304)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Frozen')
        track.set_length(360)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('The Promise')
        track.set_length(272)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Angels')
        track.set_length(495)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Mother Earth')
        track.set_length(242)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('The Truth Beneath the Rose')
        track.set_length(443)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Deceiver of Fools')
        track.set_length(458)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('All I Need')
        track.set_length(295)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Ice Queen')
        track.set_length(435)
        disc.append_track(track)

        expected.append_disc(disc)

        s = metalarchives.ReleaseScraper.from_string('http://www.metal-archives.com/albums/Within_Temptation/Black_Symphony/212779')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_404(self):
        expected = NotFoundResult()
        expected.set_scraper_name(None)

        s = metalarchives.ReleaseScraper.from_string('http://www.metal-archives.com/albums/Within_Temptation/Black_Symphony/999999999')
        r = s.get_result()

        self.assertEqual(expected, r)


class AudiojellyTest(TestCase):

    def test_simple_album(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('1999-03-25')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format(None)

        label_id = expected.create_label_id()
        label_id.set_label('React')
        label_id.append_catalogue_nr('REACT143')
        expected.append_label_id(label_id)

        expected.set_title('Love On Love (The Remixes)')

        artist = expected.create_artist()
        artist.set_name('Candi Staton')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre('House')

        expected.set_url('http://www.audiojelly.com/releases/love-on-love-the-remixes/32730')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Love On Love (Now Voyager Radio Mix)')
        track.set_length(208)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Love On Love (K-Klassic Radio Mix)')
        track.set_length(233)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Love On Love (David Morales Classic Radio Mix)')
        track.set_length(244)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Love On Love (K-Klassic Club Mix)')
        track.set_length(462)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Love On Love (Now Voyager Club Mix)')
        track.set_length(334)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Love On Love (David Morales Club Of Love Mix)')
        track.set_length(434)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title("Love On Love (Robbie Rivera's Funkin Around Mix)")
        track.set_length(409)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Love On Love (David Morales Classic Club Mix)')
        track.set_length(517)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Love On Love (Robbie Riveras NYC Dub Mix)')
        track.set_length(467)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Love On Love (David Morales Dub)')
        track.set_length(947)
        disc.append_track(track)

        expected.append_disc(disc)

        s = audiojelly.ReleaseScraper.from_string('http://www.audiojelly.com/releases/love-on-love-the-remixes/32730')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_presenting_artist(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('2013-05-17')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format(None)

        label_id = expected.create_label_id()
        label_id.set_label('Mjuzieek Digital')
        label_id.append_catalogue_nr('MJUZIEEK125')
        expected.append_label_id(label_id)

        expected.set_title('Eternal Lover (Part 1)')

        artist = expected.create_artist()
        artist.set_name('Bibi')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        artist = expected.create_artist()
        artist.set_name('Sami Dee')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        artist = expected.create_artist()
        artist.set_name('Konga Motel')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        artist = expected.create_artist()
        artist.set_name('CeCe Peniston')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.FEATURING)
        expected.append_release_artist(artist)

        expected.append_genre('House')

        expected.set_url('http://www.audiojelly.com/releases/eternal-lover-part-1/295513')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title("Eternal Lover (Bbi's Original Mix)")
        track.set_length(502)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title("Eternal Lover (Sami Dee's Flamingo Zone Mix)")
        track.set_length(496)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Eternal Lover (Sami Dee & Terry Burrus Sunday Afternoon Mix)')
        track.set_length(484)
        disc.append_track(track)

        expected.append_disc(disc)

        s = audiojelly.ReleaseScraper.from_string('http://www.audiojelly.com/releases/eternal-lover-part-1/295513')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_multiple_featuring_main_artist(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('2013-06-18')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format(None)

        label_id = expected.create_label_id()
        label_id.set_label('DubShot Records/Sound Bwoy Entertainment')
        label_id.append_catalogue_nr('DSSB-005')
        expected.append_label_id(label_id)

        expected.set_title('1-One-1 Love (feat. Pitbull, Peetah Morgan) [Dance Remix]')

        artist = expected.create_artist()
        artist.set_name('IC2')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        artist = expected.create_artist()
        artist.set_name('Pitbull')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.FEATURING)
        expected.append_release_artist(artist)

        artist = expected.create_artist()
        artist.set_name('Peetah Morgan')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.FEATURING)
        expected.append_release_artist(artist)

        expected.append_genre('Hard Dance')

        expected.set_url('http://www.audiojelly.com/releases/1one1-love-feat-pitbull-peetah-morgan-dance-remix/300732')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('1-One-1 Love (feat. Pitbull, Peetah Morgan) (Dance Remix)')
        track.set_length(217)
        disc.append_track(track)

        expected.append_disc(disc)

        s = audiojelly.ReleaseScraper.from_string('http://www.audiojelly.com/releases/1one1-love-feat-pitbull-peetah-morgan-dance-remix/300732')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_various_artists(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('2013-06-21')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format(None)

        label_id = expected.create_label_id()
        label_id.set_label('South American Grooves')
        label_id.append_catalogue_nr('SGR168')
        expected.append_label_id(label_id)

        expected.set_title('We Love This Groove 1')

        artist = expected.create_artist()
        artist.set_name(None)
        artist.set_various(True)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre('House')

        expected.set_url('http://www.audiojelly.com/releases/we-love-this-groove-1/36423')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Black Story')
        track.set_length(430)
        track_artist = expected.create_artist()
        track_artist.set_name('Alvaro Smart')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Foxy')
        track.set_length(395)
        track_artist = expected.create_artist()
        track_artist.set_name('Alvaro Smart')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Keep the Funk Alive')
        track.set_length(408)
        track_artist = expected.create_artist()
        track_artist.set_name('Alvaro Smart')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('My Thang')
        track.set_length(387)
        track_artist = expected.create_artist()
        track_artist.set_name('Alvaro Smart')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Bullerengue (Hector Couto Remix)')
        track.set_length(405)
        track_artist = expected.create_artist()
        track_artist.set_name('Emeka')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Africamania')
        track.set_length(422)
        track_artist = expected.create_artist()
        track_artist.set_name('German Brigante')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Sabrosura')
        track.set_length(345)
        track_artist = expected.create_artist()
        track_artist.set_name('German Brigante')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Aymara')
        track.set_length(390)
        track_artist = expected.create_artist()
        track_artist.set_name('Hector Couto')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('La Vida')
        track.set_length(419)
        track_artist = expected.create_artist()
        track_artist.set_name('Hector Couto')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Palestina')
        track.set_length(495)
        track_artist = expected.create_artist()
        track_artist.set_name('Loui Fernandez')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        s = audiojelly.ReleaseScraper.from_string('http://www.audiojelly.com/releases/we-love-this-groove-1/36423')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_404(self):
        expected = NotFoundResult()
        expected.set_scraper_name(None)

        s = audiojelly.ReleaseScraper.from_string('http://www.audiojelly.com/releases/plus-various-i/999999')
        r = s.get_result()

        self.assertEqual(expected, r)


class JunodownloadTest(TestCase):

    def test_simple_album(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('3 July, 2011')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format(None)

        label_id = expected.create_label_id()
        label_id.set_label('3 Beat')
        label_id.append_catalogue_nr('3BEAT 051')
        expected.append_label_id(label_id)

        expected.set_title('Love')

        artist = expected.create_artist()
        artist.set_name('Inna')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre('Funky')
        expected.append_genre('Club House')

        expected.set_url('http://www.junodownload.com/products/love/1774811-02/')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Love (UK radio edit)')
        track.set_length(151)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Love (club mix)')
        track.set_length(299)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Love (eSquire radio edit)')
        track.set_length(233)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Love (eSquire mix)')
        track.set_length(357)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Love (7th Heaven radio edit)')
        track.set_length(230)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Love (7th Heaven mix)')
        track.set_length(394)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Love (Dandeej mix)')
        track.set_length(315)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Love (DJ Andi mix)')
        track.set_length(341)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Love (Klubfiller mix)')
        track.set_length(395)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Love (Klubfiller dub mix)')
        track.set_length(389)
        disc.append_track(track)

        expected.append_disc(disc)

        s = junodownload.ReleaseScraper.from_string('http://www.junodownload.com/products/love/1774811-02/')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_featuring_main_artist(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('12 November, 2010')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format(None)

        label_id = expected.create_label_id()
        label_id.set_label('Staff Productions')
        label_id.append_catalogue_nr('SFP 012')
        expected.append_label_id(label_id)

        expected.set_title('Love')

        artist = expected.create_artist()
        artist.set_name('Mustafa')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        artist = expected.create_artist()
        artist.set_name('Tasita D mour')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.FEATURING)
        expected.append_release_artist(artist)

        expected.append_genre('Broken Beat')
        expected.append_genre('Nu Jazz')
        expected.append_genre('Nu Soul')

        expected.set_url('http://www.junodownload.com/products/love/1662955-02/')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Love (original Miami mix)')
        track.set_length(301)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title("Love (Mustafa's Deep Piano mix)")
        track.set_length(308)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Love (D-Malice Afro-edit vocal)')
        track.set_length(381)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Love (RY meets Mustafa vocal mix)')
        track.set_length(365)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Love (Ospina & Oscar P remix)')
        track.set_length(365)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Love (Ospina & Oscar P Drum dub)')
        track.set_length(365)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Love (Steven Stone remix)')
        track.set_length(389)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Love (David Mateo & Rafix club mix)')
        track.set_length(297)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Love (Rafael Yapudjian Meets RyB remix)')
        track.set_length(449)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Love (acoustic mix)')
        track.set_length(232)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Love (D-Malice Afro edit instrumental)')
        track.set_length(381)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Love (Ospina & Oscar P intru-mental)')
        track.set_length(365)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title('Love (Steven Stone instrumental remix)')
        track.set_length(388)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('14')
        track.set_title('Love (David Mateo & Rafix radio club mix instrumental)')
        track.set_length(297)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('15')
        track.set_title('Love (Rafael Yapudjian Meets RyB dub remix)')
        track.set_length(449)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('16')
        track.set_title('Love (RY Meets Mustafa instrumental mix)')
        track.set_length(365)
        disc.append_track(track)

        expected.append_disc(disc)

        s = junodownload.ReleaseScraper.from_string('http://www.junodownload.com/products/love/1662955-02/')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_mixed_various_main_artists(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('21 July, 2010')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format(None)

        label_id = expected.create_label_id()
        label_id.set_label('Bass Planet Germany')
        label_id.append_catalogue_nr('425011 7613280')
        expected.append_label_id(label_id)

        expected.set_title('A Love Story 89-10 (unmixed tracks)')

        artist = expected.create_artist()
        artist.set_name('Westbam')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre('Funky')
        expected.append_genre('Club House')

        expected.set_url('http://www.junodownload.com/products/a-love-story-89-10-unmixed-tracks/1609583-02/')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Westbam - Official Anthems (continuous DJ mix)')
        track.set_length(3780)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Westbam - Love Sounds 3000 (continuous DJ mix)')
        track.set_length(4767)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Westbam - The Original Feelings (continuous DJ mix)')
        track.set_length(4143)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title("Westbam - Don't Look Back In Anger (short mix)")
        track.set_length(201)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('The Love Committee - Love Rules')
        track.set_length(412)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('WestBam & The Love Committee - Love Is Everywhere (New Location) (original mix)')
        track.set_length(439)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('WestBam & The Love Committee - Highway To Love (Final remix)')
        track.set_length(460)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('WestBam & The Love Committee - United States Of Love')
        track.set_length(421)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Dr Motte & Westbam presents - Sunshine')
        track.set_length(244)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Dr Motte & Westbam presents - One World One Future')
        track.set_length(222)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title("The Love Committee - You Can't Stop Us")
        track.set_length(407)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Dr Motte & Westbam presents - Loveparade 2000')
        track.set_length(208)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title('Dr Motte & Westbam presents - Music Is The Key')
        track.set_length(499)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('14')
        track.set_title("Felix - Don't You Want Me (Hooj mix)")
        track.set_length(355)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('15')
        track.set_title('Blake Baxter - One More Time')
        track.set_length(254)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('16')
        track.set_title('The Break Boys - My House Is Your House (Miami Beach Break mix)')
        track.set_length(380)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('17')
        track.set_title('The Love Committee - We Feel Love')
        track.set_length(334)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('18')
        track.set_title('Paul & Fritz Kalkbrenner - Sky And Sand (Berlin Calling mix)')
        track.set_length(239)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('19')
        track.set_title('The Love Committee - Access Peace')
        track.set_length(431)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('20')
        track.set_title('Westbam - Spoon (unvergesslisch)')
        track.set_length(419)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('21')
        track.set_title('Westbam - Escalate')
        track.set_length(387)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('22')
        track.set_title('Deekline & Ed Solo - Handz Up (Stantons Warriors remix Westbam edit)')
        track.set_length(288)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('23')
        track.set_title('Westbam - Fake Blue Eyes')
        track.set_length(273)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('24')
        track.set_title('Moguai & Westbam - Original Hardcore EP')
        track.set_length(288)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('25')
        track.set_title('Jewelz - Get Down')
        track.set_length(361)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('26')
        track.set_title('Tom Wax & Strobe - Cantate (Lalai Lala) (radio mix)')
        track.set_length(202)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('27')
        track.set_title('Smash Hifi - Take You Back (VIP edit)')
        track.set_length(302)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('28')
        track.set_title('Elite Force & Hatiras & JELO & Vandal & Stanton Warriors - MAD')
        track.set_length(428)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('29')
        track.set_title('Mom & Dad - Judas (Dem Slackers remix)')
        track.set_length(268)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('30')
        track.set_title('DJ Icey - Yeah Right')
        track.set_length(297)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('31')
        track.set_title('Westbam - Sage Sage')
        track.set_length(280)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('32')
        track.set_title('Felix Cartal - Love')
        track.set_length(314)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('33')
        track.set_title('Westbam - Hard Times (Westbam edit)')
        track.set_length(225)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('34')
        track.set_title('Deadmau5 - Strobe (Plump DJs remix)')
        track.set_length(343)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('35')
        track.set_title('Members Of Mayday - Make My Day (short mix)')
        track.set_length(208)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('36')
        track.set_title('Boris Dlugosch - Bangkok')
        track.set_length(323)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('37')
        track.set_title('Westbam - Yeah Bla Whatever')
        track.set_length(355)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('38')
        track.set_title('Elite Force & Daniele Papini & Harnessnoise - Harness The Nonsense')
        track.set_length(372)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('39')
        track.set_title('Tom De Neef Presents Jacksquad - Boavista')
        track.set_length(453)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('40')
        track.set_title('Dennis Ferrer - Hey Hey (radio edit)')
        track.set_length(189)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('41')
        track.set_title("Steve Aoki - I'm In The House (feat Zuper Blahq)")
        track.set_length(199)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('42')
        track.set_title('Peter Licht - Sonnendeck (Deck 5 mix)')
        track.set_length(200)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('43')
        track.set_title('Orbital - Chime (extended version)')
        track.set_length(760)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('44')
        track.set_title('Format 1 - Solid Session')
        track.set_length(261)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('45')
        track.set_title('Fierce Ruling Diva - Rubb It In')
        track.set_length(305)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('46')
        track.set_title('X-101 - Sonic Destroyer')
        track.set_length(300)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('47')
        track.set_title('Marusha - Ravechannel')
        track.set_length(216)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('48')
        track.set_title('DJ Dick - Malefactor')
        track.set_length(376)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('49')
        track.set_title('Westbam - My Life Of Crime')
        track.set_length(313)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('50')
        track.set_title('Westbam - Mr Peanut')
        track.set_length(343)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('51')
        track.set_title('Westbam - Endlos')
        track.set_length(1280)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('52')
        track.set_title('The Nighttripper - Tone Explotation')
        track.set_length(310)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('53')
        track.set_title('Vein Melter - Hypnotized')
        track.set_length(521)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('54')
        track.set_title('Dr Mottes Euphorhythm - Patrik')
        track.set_length(335)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('55')
        track.set_title('Westbam - Super Old School Mix')
        track.set_length(647)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('56')
        track.set_title('Westbam & Nena - Oldschool Baby (piano mix)')
        track.set_length(358)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('57')
        track.set_title('Richie Rich - Salsa House')
        track.set_length(419)
        disc.append_track(track)

        expected.append_disc(disc)

        s = junodownload.ReleaseScraper.from_string('http://www.junodownload.com/products/a-love-story-89-10-unmixed-tracks/1609583-02/')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_various_artists(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('30 December, 2008')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format(None)

        label_id = expected.create_label_id()
        label_id.set_label('NuZone Tools')
        label_id.append_catalogue_nr('NZT 015')
        expected.append_label_id(label_id)

        expected.set_title('2008 MOST USEFUL TOOLS')

        artist = expected.create_artist()
        artist.set_name(None)
        artist.set_various(True)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre('Progressive House')

        expected.set_url('http://www.junodownload.com/products/2008-most-useful-tools/1384246-02/')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Sygma - Nightlights')
        track.set_length(522)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title("Adolfo Morrone - I'm Nervhouse")
        track.set_length(455)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Jonathan Carey - The Science Of Music')
        track.set_length(354)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Lorenzo Venturini - New Era')
        track.set_length(415)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('E-Mark - Anthem For Deejays Part 2')
        track.set_length(420)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Alex Spadoni - Sunset')
        track.set_length(451)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Jordan Baxxter feat Aedo - What It Feels Like For A Girl?')
        track.set_length(470)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Hildebrand - Raindrops')
        track.set_length(519)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Dario Maffia - Phaelon')
        track.set_length(545)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Emerald Coast - Exhausted')
        track.set_length(338)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Sygma - Children')
        track.set_length(539)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('GoldSaint - Tonight')
        track.set_length(405)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title('Peter Santos - Back To You')
        track.set_length(454)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('14')
        track.set_title('Oscar Burnside - Dark Side')
        track.set_length(334)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('15')
        track.set_title('GoldSaint - Recharge')
        track.set_length(510)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('16')
        track.set_title('Luca Lux - Wildest Dream')
        track.set_length(428)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('17')
        track.set_title('SimoX DJ - Star')
        track.set_length(317)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('18')
        track.set_title('Greek S - The Sound (09 mix)')
        track.set_length(517)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('19')
        track.set_title('Various - Mixed Tools 2008 (Part 1 - mixed by Sygma)')
        track.set_length(2494)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('20')
        track.set_title('Various - Mixed Tools 2008 (Part 2 - mixed by Peter Santos)')
        track.set_length(2334)
        disc.append_track(track)

        expected.append_disc(disc)

        s = junodownload.ReleaseScraper.from_string('http://www.junodownload.com/products/2008-most-useful-tools/1384246-02/')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_404(self):
        expected = NotFoundResult()
        expected.set_scraper_name(None)

        s = junodownload.ReleaseScraper.from_string('http://www.junodownload.com/products/2008-most-useful-tools/99999999/')
        r = s.get_result()

        self.assertEqual(expected, r)


class ITunesTest(TestCase):

    def test_simple_album(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('1985')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format(None)

        expected.set_title('Love (Remastered)')

        artist = expected.create_artist()
        artist.set_name('The Cult')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre('Rock')
        expected.append_genre('Adult Alternative')
        expected.append_genre('Hard Rock')
        expected.append_genre('Alternative')
        expected.append_genre('Goth Rock')
        expected.append_genre('College Rock')

        expected.set_url('http://itunes.apple.com/us/album/love-remastered/id3022929?ign-mpt=uo%3D4')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Nirvana')
        track.set_length(326)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Big Neon Glitter')
        track.set_length(291)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Love')
        track.set_length(329)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Brother Wolf, Sister Moon')
        track.set_length(407)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Rain')
        track.set_length(236)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Phoenix')
        track.set_length(306)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Hollow Man')
        track.set_length(285)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Revolution')
        track.set_length(326)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('She Sells Sanctuary')
        track.set_length(263)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Black Angel')
        track.set_length(322)
        disc.append_track(track)

        expected.append_disc(disc)

        s = itunes.ReleaseScraper.from_string('http://itunes.apple.com/us/album/love-remastered/id3022929?ign-mpt=uo%3D4')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_multiple_cds(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('Mar 29, 2003')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format(None)

        expected.set_title('Requiembryo')

        artist = expected.create_artist()
        artist.set_name('ASP')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre('Rock')
        expected.append_genre('Alternative')
        expected.append_genre('Goth Rock')
        expected.append_genre('Metal')

        expected.set_url('http://itunes.apple.com/us/album/requiembryo/id461460427?uo=4')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title(u'\xf7Ff\xe4hrte')
        track.set_length(355)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Coming Home')
        track.set_length(287)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('De Profundis')
        track.set_length(233)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title(u'Pavor Diurnus (Fremde Tr\xe4ume 1)')
        track.set_length(83)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Duett (Das Minnellied der Incubi)')
        track.set_length(277)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Schmetterflug')
        track.set_length(178)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Frostbrand')
        track.set_length(322)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Ich bin ein wahrer Satan')
        track.set_length(355)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Erinnerungen eines Fremden')
        track.set_length(136)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Raserei')
        track.set_length(313)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Das Erwachen')
        track.set_length(423)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Erinnerungen eines Fremden (Reprise)')
        track.set_length(83)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title('Finger Weg! Finger!')
        track.set_length(217)
        disc.append_track(track)

        expected.append_disc(disc)

        disc = expected.create_disc()
        disc.set_number(2)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Requiem 01 - Introitus Interruptus')
        track.set_length(201)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Requiem 02 - Kyrie Elesion Mercy')
        track.set_length(227)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Requiem 03 - Kyrie Litani Agnus Die')
        track.set_length(154)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Requiem 04 - Die arIse (Sequenz)')
        track.set_length(328)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Requiem 05 - Nimm Mich! (Suffertorium)')
        track.set_length(213)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Requiem 06 - Sanctus/ Benedictus')
        track.set_length(158)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Requiem 07 - Lux Aeterna')
        track.set_length(52)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Requiem 08 - Hymnus Heaven')
        track.set_length(175)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Requiem 09 - Exsequien Hell')
        track.set_length(162)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Nekrolog')
        track.set_length(300)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title(u'Pavor Nocturnis (Fremde Tr\xe4ume 2)')
        track.set_length(64)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Biotopia')
        track.set_length(386)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title('How Far Would You Go?')
        track.set_length(246)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('14')
        track.set_title('Nie Mehr')
        track.set_length(363)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('15')
        track.set_title(u'Off\xe4hrte (Reprise)')
        track.set_length(77)
        disc.append_track(track)

        expected.append_disc(disc)

        s = itunes.ReleaseScraper.from_string('http://itunes.apple.com/us/album/requiembryo/id461460427?uo=4')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_various_artists(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('Jun 07, 2011')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format(None)

        expected.set_title('2011 Warped Tour Compilation')

        artist = expected.create_artist()
        artist.set_name(None)
        artist.set_various(True)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre('Alternative')

        expected.set_url('http://itunes.apple.com/us/album/2011-warped-tour-compilation/id439590029?uo=4')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title("For a Pessimist, I'm Pretty Optimistic")
        track.set_length(228)
        track_artist = expected.create_artist()
        track_artist.set_name('Paramore')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('All Signs Point to Lauderdale')
        track.set_length(197)
        track_artist = expected.create_artist()
        track_artist.set_name('A Day to Remember')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Certain')
        track.set_length(181)
        track_artist = expected.create_artist()
        track_artist.set_name('Set Your Goals')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Anatomy')
        track.set_length(226)
        track_artist = expected.create_artist()
        track_artist.set_name('The Devil Wears Prada')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Closure')
        track.set_length(238)
        track_artist = expected.create_artist()
        track_artist.set_name('Asking Alexandria')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('A for Andrew')
        track.set_length(202)
        track_artist = expected.create_artist()
        track_artist.set_name('Attack Attack! (US)')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Modern American Gypsy')
        track.set_length(158)
        track_artist = expected.create_artist()
        track_artist.set_name('Big D and the Kids Table')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Bright Eyes')
        track.set_length(200)
        track_artist = expected.create_artist()
        track_artist.set_name('Vonnegutt')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Where Two Bodies Lie')
        track.set_length(257)
        track_artist = expected.create_artist()
        track_artist.set_name('Moving Mountains')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title("Don't Let Me Cave In")
        track.set_length(203)
        track_artist = expected.create_artist()
        track_artist.set_name('The Wonder Years')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title("Can't Catch Me")
        track.set_length(204)
        track_artist = expected.create_artist()
        track_artist.set_name('Neo Geo')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Finding Something to Do')
        track.set_length(175)
        track_artist = expected.create_artist()
        track_artist.set_name('Hellogoodbye')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title('Wobble')
        track.set_length(222)
        track_artist = expected.create_artist()
        track_artist.set_name('Family Force 5')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('14')
        track.set_title('Take One Last Breath')
        track.set_length(219)
        track_artist = expected.create_artist()
        track_artist.set_name('Abandon All Ships')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('15')
        track.set_title('Purified')
        track.set_length(215)
        track_artist = expected.create_artist()
        track_artist.set_name('Of Mice & Men')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('16')
        track.set_title('Pull Your Own Weight')
        track.set_length(175)
        track_artist = expected.create_artist()
        track_artist.set_name('Veara')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('17')
        track.set_title('Good Things')
        track.set_length(218)
        track_artist = expected.create_artist()
        track_artist.set_name('The Dangerous Summer')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('18')
        track.set_title("Tell Me I'm a Wreck")
        track.set_length(219)
        track_artist = expected.create_artist()
        track_artist.set_name('Every Avenue')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('19')
        track.set_title('Too Little Too Late')
        track.set_length(191)
        track_artist = expected.create_artist()
        track_artist.set_name('A Skylit Drive')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('20')
        track.set_title('Sound of My Voice (feat. Weerd Science)')
        track.set_length(210)
        track_artist = expected.create_artist()
        track_artist.set_name('Big Chocolate')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('21')
        track.set_title("Sasha Don't Sleep")
        track.set_length(207)
        track_artist = expected.create_artist()
        track_artist.set_name('The Dance Party')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('22')
        track.set_title('Punk Rock and Roll')
        track.set_length(154)
        track_artist = expected.create_artist()
        track_artist.set_name('Street Dogs')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('23')
        track.set_title('Riverside')
        track.set_length(175)
        track_artist = expected.create_artist()
        track_artist.set_name('Blacklist Royals')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('24')
        track.set_title('Whispers In a Shot Glass')
        track.set_length(99)
        track_artist = expected.create_artist()
        track_artist.set_name('Elway')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('25')
        track.set_title('Worn Out Passport')
        track.set_length(125)
        track_artist = expected.create_artist()
        track_artist.set_name('The Copyrights')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('26')
        track.set_title('Because of the Shame')
        track.set_length(260)
        track_artist = expected.create_artist()
        track_artist.set_name('Against Me!')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('27')
        track.set_title("I Don't Wanna Be the One")
        track.set_length(189)
        track_artist = expected.create_artist()
        track_artist.set_name('Lucero')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('28')
        track.set_title('Meddler')
        track.set_length(233)
        track_artist = expected.create_artist()
        track_artist.set_name('August Burns Red')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('29')
        track.set_title('Pounce Bounce')
        track.set_length(146)
        track_artist = expected.create_artist()
        track_artist.set_name('Dance Gavin Dance')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('30')
        track.set_title('Blood Drunk')
        track.set_length(214)
        track_artist = expected.create_artist()
        track_artist.set_name('Larry and His Flask')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('31')
        track.set_title('Our New Intelligence')
        track.set_length(234)
        track_artist = expected.create_artist()
        track_artist.set_name('River City Extension')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('32')
        track.set_title('Samba Around the Clock')
        track.set_length(159)
        track_artist = expected.create_artist()
        track_artist.set_name('Brothers of Brazil')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('33')
        track.set_title('Your Trying to Kill Me')
        track.set_length(168)
        track_artist = expected.create_artist()
        track_artist.set_name('Lionize')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('34')
        track.set_title('Complicated Girl')
        track.set_length(124)
        track_artist = expected.create_artist()
        track_artist.set_name('The Agrrolites')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('35')
        track.set_title('The System')
        track.set_length(163)
        track_artist = expected.create_artist()
        track_artist.set_name('The Black Pacific')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('36')
        track.set_title('It All Relates')
        track.set_length(190)
        track_artist = expected.create_artist()
        track_artist.set_name('Sharks')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('37')
        track.set_title('Deep Sleep')
        track.set_length(157)
        track_artist = expected.create_artist()
        track_artist.set_name('The Menzingers')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('38')
        track.set_title('Any Other Heart')
        track.set_length(232)
        track_artist = expected.create_artist()
        track_artist.set_name('Go Radio')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('39')
        track.set_title('The Joyride')
        track.set_length(249)
        track_artist = expected.create_artist()
        track_artist.set_name('There for Tomorrow')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('40')
        track.set_title('Notes from the Dead Zone')
        track.set_length(185)
        track_artist = expected.create_artist()
        track_artist.set_name('Places and Numbers')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('41')
        track.set_title('Bloody Poetry')
        track.set_length(201)
        track_artist = expected.create_artist()
        track_artist.set_name('Grieves')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('42')
        track.set_title('It Comes Naturally')
        track.set_length(216)
        track_artist = expected.create_artist()
        track_artist.set_name('I Set My Friends On Fire')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('43')
        track.set_title('[&] Delinquents')
        track.set_length(175)
        track_artist = expected.create_artist()
        track_artist.set_name('Woe, Is Me')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('44')
        track.set_title('Relentless Chaos')
        track.set_length(205)
        track_artist = expected.create_artist()
        track_artist.set_name('Miss May I')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('45')
        track.set_title('Creatures')
        track.set_length(227)
        track_artist = expected.create_artist()
        track_artist.set_name('Motionless In White')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('46')
        track.set_title('2012')
        track.set_length(181)
        track_artist = expected.create_artist()
        track_artist.set_name('The Word Alive')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('47')
        track.set_title('Autograph')
        track.set_length(193)
        track_artist = expected.create_artist()
        track_artist.set_name('Sick of Sarah')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('48')
        track.set_title('Hypnotize')
        track.set_length(193)
        track_artist = expected.create_artist()
        track_artist.set_name('The Darlings')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('49')
        track.set_title('The Exposed')
        track.set_length(209)
        track_artist = expected.create_artist()
        track_artist.set_name('To Your Demised')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('50')
        track.set_title('Continental')
        track.set_length(211)
        track_artist = expected.create_artist()
        track_artist.set_name('No Reservations')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('51')
        track.set_title('California')
        track.set_length(208)
        track_artist = expected.create_artist()
        track_artist.set_name('Winds Of Plauge')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('52')
        track.set_title('#Winning')
        track.set_length(162)
        track_artist = expected.create_artist()
        track_artist.set_name("That's Outrageous!")
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('53')
        track.set_title('The Secrets Between')
        track.set_length(227)
        track_artist = expected.create_artist()
        track_artist.set_name('Eyes Set to Kill')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('54')
        track.set_title('A Family Affair')
        track.set_length(321)
        track_artist = expected.create_artist()
        track_artist.set_name('Verah Falls')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('55')
        track.set_title('Horizon to Zenith')
        track.set_length(259)
        track_artist = expected.create_artist()
        track_artist.set_name('The Human Abstract')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        s = itunes.ReleaseScraper.from_string('http://itunes.apple.com/us/album/2011-warped-tour-compilation/id439590029?uo=4')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_non_us_store(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('14 mars 2011')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format(None)

        expected.set_title(u'Puissance Ra\xef RnB 2011')

        artist = expected.create_artist()
        artist.set_name(u'Compilation Puissance Ra\xef RnB')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre('Musiques du monde')
        expected.append_genre('Musique')

        expected.set_url('http://itunes.apple.com/fr/album/puissance-rai-rnb-2011/id423552770')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Alger Casa Tunis...Ou Paris (Feat. Ap Du 113 & Reda Taliani)')
        track.set_length(263)
        track_artist = expected.create_artist()
        track_artist.set_name('DJ Idsa')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Marseille By Night')
        track.set_length(220)
        track_artist = expected.create_artist()
        track_artist.set_name("L'algerino")
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Allez Allez (Feat. Amar)')
        track.set_length(210)
        track_artist = expected.create_artist()
        track_artist.set_name('El Matador')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Bolly Rai (Feat. Tlf, Rayan & Amal)')
        track.set_length(225)
        track_artist = expected.create_artist()
        track_artist.set_name('DJ Idsa')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Rani Mourak')
        track.set_length(234)
        track_artist = expected.create_artist()
        track_artist.set_name('Hasni')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Enti Balouta')
        track.set_length(228)
        track_artist = expected.create_artist()
        track_artist.set_name('Zinou le Parisien')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Amour Kabyle (Feat. Alilou)')
        track.set_length(231)
        track_artist = expected.create_artist()
        track_artist.set_name('Black Barbie')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Hasni')
        track.set_length(230)
        track_artist = expected.create_artist()
        track_artist.set_name('Cheb Sahraoui')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Petitates')
        track.set_length(233)
        track_artist = expected.create_artist()
        track_artist.set_name('Marsaoui')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Hina Ou Hina')
        track.set_length(238)
        track_artist = expected.create_artist()
        track_artist.set_name('Rimitti')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title("Ya H'Bibi")
        track.set_length(228)
        track_artist = expected.create_artist()
        track_artist.set_name('Rachida')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title("Haya N'Aaaoulou")
        track.set_length(227)
        track_artist = expected.create_artist()
        track_artist.set_name('Ouarda')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title('Jalouse')
        track.set_length(254)
        track_artist = expected.create_artist()
        track_artist.set_name('Chaba Djenet')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('14')
        track.set_title('Always On My Mind (Feat. Big Ali & Mohamed Lamine)')
        track.set_length(200)
        track_artist = expected.create_artist()
        track_artist.set_name('DJ Idsa')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('15')
        track.set_title('Chehal Fia Houssad Yehadrou')
        track.set_length(246)
        track_artist = expected.create_artist()
        track_artist.set_name('Chaba Kheira')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('16')
        track.set_title("L'Histoire Maak Bdate")
        track.set_length(255)
        track_artist = expected.create_artist()
        track_artist.set_name('Cheb Abbes')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('17')
        track.set_title('Habssine')
        track.set_length(252)
        track_artist = expected.create_artist()
        track_artist.set_name('Cheb Bilal')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('18')
        track.set_title('Mathawache Alia')
        track.set_length(256)
        track_artist = expected.create_artist()
        track_artist.set_name('Cheba Faiza')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('19')
        track.set_title('Manfoutakche Explosif Mix By Dj Meyd')
        track.set_length(280)
        track_artist = expected.create_artist()
        track_artist.set_name('Faycal')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('20')
        track.set_title('Tout Le Monde Danse (Remix) [Feat. Jesse Matador & Amal & Dollarman]')
        track.set_length(220)
        track_artist = expected.create_artist()
        track_artist.set_name('DJ Idsa')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('21')
        track.set_title('Rai Afrika (Feat. Big Ali)')
        track.set_length(187)
        track_artist = expected.create_artist()
        track_artist.set_name('Reda Taliani')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('22')
        track.set_title('Citoyens Du Monde (Exclus) [Feat. Rahib]')
        track.set_length(267)
        track_artist = expected.create_artist()
        track_artist.set_name('Sixieme Sens')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('23')
        track.set_title('On Va Danser (Feat. Alibi Montana)')
        track.set_length(204)
        track_artist = expected.create_artist()
        track_artist.set_name('Cheb Fouzi')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('24')
        track.set_title('Hit The Rai Floor (Feat. Big Ali & Cheb Akil)')
        track.set_length(224)
        track_artist = expected.create_artist()
        track_artist.set_name('DJ Idsa')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('25')
        track.set_title('Laab Baid')
        track.set_length(192)
        track_artist = expected.create_artist()
        track_artist.set_name('Cheb Bilal')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('26')
        track.set_title('Manbghiche Alik (Feat. Mc Harage & Dj Faouzi)')
        track.set_length(252)
        track_artist = expected.create_artist()
        track_artist.set_name('Cheb Abbes')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('27')
        track.set_title('One Two Three Khala Galbi Yevibri')
        track.set_length(245)
        track_artist = expected.create_artist()
        track_artist.set_name('Houari Manar')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('28')
        track.set_title('Bla Bik')
        track.set_length(238)
        track_artist = expected.create_artist()
        track_artist.set_name('Kader Japonais')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('29')
        track.set_title('Bouya')
        track.set_length(238)
        track_artist = expected.create_artist()
        track_artist.set_name('Ouarda')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('30')
        track.set_title('Chicoter (Feat. Jacky Brown & Akil)')
        track.set_length(241)
        track_artist = expected.create_artist()
        track_artist.set_name('DJ Idsa')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('31')
        track.set_title('Mathawsich Alia By Dj Zahir')
        track.set_length(143)
        track_artist = expected.create_artist()
        track_artist.set_name('Faycal')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('32')
        track.set_title('Ya Loukane Galbak')
        track.set_length(237)
        track_artist = expected.create_artist()
        track_artist.set_name('Chaba Kheira')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('33')
        track.set_title('Gouli Wine Rak Anaya Nejika')
        track.set_length(299)
        track_artist = expected.create_artist()
        track_artist.set_name('Hasni Seghir')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('34')
        track.set_title('La Corniche (Feat. Tunisiano & Zahouania) [Remix]')
        track.set_length(243)
        track_artist = expected.create_artist()
        track_artist.set_name('DJ Goldfingers')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('35')
        track.set_title('Bullit (Feat. Mokobe Du 113 & Sheryne)')
        track.set_length(201)
        track_artist = expected.create_artist()
        track_artist.set_name('Elephant Man')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('36')
        track.set_title('Aar Rabi')
        track.set_length(299)
        track_artist = expected.create_artist()
        track_artist.set_name('Rachida')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('37')
        track.set_title('Ayet Manaalam')
        track.set_length(313)
        track_artist = expected.create_artist()
        track_artist.set_name('Hasni')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('38')
        track.set_title('All Rai On Me (Feat. Mohamed Lamine)')
        track.set_length(203)
        track_artist = expected.create_artist()
        track_artist.set_name('Shyneze')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('39')
        track.set_title('Emmene Moi (Feat. Najim)')
        track.set_length(223)
        track_artist = expected.create_artist()
        track_artist.set_name('Swen')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('40')
        track.set_title("M'Zia (Feat. Reda Taliani)")
        track.set_length(234)
        track_artist = expected.create_artist()
        track_artist.set_name("L'algerino")
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        disc = expected.create_disc()
        disc.set_number(2)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('1 2 3 Viva Algeria')
        track.set_length(279)
        track_artist = expected.create_artist()
        track_artist.set_name('Algeria United')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Fort Fort')
        track.set_length(204)
        track_artist = expected.create_artist()
        track_artist.set_name('Milano & Torino')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Consulat')
        track.set_length(232)
        track_artist = expected.create_artist()
        track_artist.set_name('Hasni')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title(u'\xc7a Passe Ou \xc7a Casse (Feat. Tunisiano)')
        track.set_length(186)
        track_artist = expected.create_artist()
        track_artist.set_name('Reda Taliani')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Pas De Chance')
        track.set_length(247)
        track_artist = expected.create_artist()
        track_artist.set_name('Cheb Sahraoui')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Rani Mara Hna')
        track.set_length(246)
        track_artist = expected.create_artist()
        track_artist.set_name('Marsaoui')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Adabtek Nti Bizarre')
        track.set_length(243)
        track_artist = expected.create_artist()
        track_artist.set_name('Kader Japonais')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Kedab')
        track.set_length(251)
        track_artist = expected.create_artist()
        track_artist.set_name('Chaba Djenet')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Achekek Abonne Duo Avec Abbes')
        track.set_length(220)
        track_artist = expected.create_artist()
        track_artist.set_name('Chaba Kheira')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Fidel (Feat. Amine Dib)')
        track.set_length(230)
        track_artist = expected.create_artist()
        track_artist.set_name('Cheb Abbes')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Bafana Bafana')
        track.set_length(284)
        track_artist = expected.create_artist()
        track_artist.set_name('Cheb Bilal')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Dalmouni')
        track.set_length(235)
        track_artist = expected.create_artist()
        track_artist.set_name('Ouarda')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title('Sabat El Ouarda')
        track.set_length(245)
        track_artist = expected.create_artist()
        track_artist.set_name('Rachida')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('14')
        track.set_title('Rah Glaibi Andak')
        track.set_length(223)
        track_artist = expected.create_artist()
        track_artist.set_name('Rimitti')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('15')
        track.set_title('Ma Nebghik')
        track.set_length(271)
        track_artist = expected.create_artist()
        track_artist.set_name('Zinou le Parisien')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('16')
        track.set_title('Galbi 4 Giga')
        track.set_length(239)
        track_artist = expected.create_artist()
        track_artist.set_name('Cheba Faiza')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('17')
        track.set_title('Dayarni Fi Ainih')
        track.set_length(224)
        track_artist = expected.create_artist()
        track_artist.set_name('Cheba Kheira')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('18')
        track.set_title('Nesimik Omri Youy Youy')
        track.set_length(236)
        track_artist = expected.create_artist()
        track_artist.set_name('Faycal')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('19')
        track.set_title('Andi Madama')
        track.set_length(219)
        track_artist = expected.create_artist()
        track_artist.set_name('Hasni Seghir')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('20')
        track.set_title('Charikat Non Tehleb')
        track.set_length(217)
        track_artist = expected.create_artist()
        track_artist.set_name('Houari Manar')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('21')
        track.set_title('Aicha')
        track.set_length(255)
        track_artist = expected.create_artist()
        track_artist.set_name('Khaled')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('22')
        track.set_title(u'Le Dernier Qui A Parl\xe9')
        track.set_length(196)
        track_artist = expected.create_artist()
        track_artist.set_name('Amina')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('23')
        track.set_title('Josephine')
        track.set_length(247)
        track_artist = expected.create_artist()
        track_artist.set_name('Reda Taliani')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('24')
        track.set_title('Bnet Paris')
        track.set_length(253)
        track_artist = expected.create_artist()
        track_artist.set_name('ONB')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('25')
        track.set_title('Im Nin Alu-2000')
        track.set_length(210)
        track_artist = expected.create_artist()
        track_artist.set_name('Ofra Haza')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('26')
        track.set_title('Ki Yaajabni Houbi')
        track.set_length(241)
        track_artist = expected.create_artist()
        track_artist.set_name('Chaba Kheira')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('27')
        track.set_title('Mali Mali (Feat. Chabba Djenet)')
        track.set_length(245)
        track_artist = expected.create_artist()
        track_artist.set_name('Cheb Abbes')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('28')
        track.set_title('Ntiya Omri Ntiya Ma Vie Version Salsa')
        track.set_length(254)
        track_artist = expected.create_artist()
        track_artist.set_name('Cheb Bilal')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('29')
        track.set_title('Dour Dour')
        track.set_length(247)
        track_artist = expected.create_artist()
        track_artist.set_name('Faycal')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('30')
        track.set_title('Wajh Ghnas')
        track.set_length(243)
        track_artist = expected.create_artist()
        track_artist.set_name('Houari Manar')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('31')
        track.set_title('Maniche Aaref Chta Srali')
        track.set_length(223)
        track_artist = expected.create_artist()
        track_artist.set_name('Houary Dauphin')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('32')
        track.set_title('One Two Three (Feat. Sonia & Univers)')
        track.set_length(234)
        track_artist = expected.create_artist()
        track_artist.set_name('Mahfoud')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('33')
        track.set_title('Shrouha Fort')
        track.set_length(229)
        track_artist = expected.create_artist()
        track_artist.set_name('Kader Japonais')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('34')
        track.set_title('Chira Malha')
        track.set_length(240)
        track_artist = expected.create_artist()
        track_artist.set_name('Zinou le Parisien')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('35')
        track.set_title('Yaghazal')
        track.set_length(242)
        track_artist = expected.create_artist()
        track_artist.set_name('Hasni')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('36')
        track.set_title('Chouli')
        track.set_length(243)
        track_artist = expected.create_artist()
        track_artist.set_name('Marsaoui')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('37')
        track.set_title('Liyah Liyah')
        track.set_length(250)
        track_artist = expected.create_artist()
        track_artist.set_name('Rimitti')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('38')
        track.set_title('Salou Salou')
        track.set_length(231)
        track_artist = expected.create_artist()
        track_artist.set_name('Rachida')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('39')
        track.set_title('Gendarme')
        track.set_length(225)
        track_artist = expected.create_artist()
        track_artist.set_name('Ouarda')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('40')
        track.set_title('Dana Dana (Feat. Rima)')
        track.set_length(244)
        track_artist = expected.create_artist()
        track_artist.set_name('Rayan')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        s = itunes.ReleaseScraper.from_string('http://itunes.apple.com/fr/album/puissance-rai-rnb-2011/id423552770')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_tracknum_in_name_column(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date('Jun 01, 2005')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format(None)

        expected.set_title('Chopin: Piano Works')

        artist = expected.create_artist()
        artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.append_genre('Classical')

        expected.set_url('https://itunes.apple.com/us/album/chopin-piano-works/id77261376')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('No. 1. in C')
        track.set_length(136)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('12 Etudes, Op.10: No. 2. in A Minor "chromatique"')
        track.set_length(84)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('12 Etudes, Op.10: No. 3. in E "Tristesse"')
        track.set_length(243)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('12 Etudes, Op.10: No. 4. in C-Sharp Minor')
        track.set_length(128)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('12 Etudes, Op.10: No. 5. in G-Flat "Black Keys"')
        track.set_length(102)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('12 Etudes, Op.10: No. 6. in E-Flat Minor')
        track.set_length(195)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('12 Etudes, Op.10: No. 7. in C')
        track.set_length(92)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('12 Etudes, Op.10: No. 8. in F')
        track.set_length(163)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('12 Etudes, Op.10: No. 9. in F Minor')
        track.set_length(137)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('12 Etudes, Op.10: No. 10. in A-Flat')
        track.set_length(140)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('12 Etudes, Op.10: No. 11. in E-Flat')
        track.set_length(135)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('12 Etudes, Op.10: No. 12. in C Minor "Revolutionary"')
        track.set_length(173)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title('No. 1 in A-Flat - "Harp Study"')
        track.set_length(171)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('14')
        track.set_title('12 Etudes, Op.25: No. 2 in F Minor')
        track.set_length(92)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('15')
        track.set_title('12 Etudes, Op.25: No. 3 in F Major')
        track.set_length(103)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('16')
        track.set_title('12 Etudes, Op.25: No. 4 in A Minor')
        track.set_length(88)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('17')
        track.set_title('12 Etudes, Op.25: No. 5 in E Minor')
        track.set_length(198)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('18')
        track.set_title('12 Etudes, Op.25: No. 6 in G-Sharp Minor')
        track.set_length(117)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('19')
        track.set_title('12 Etudes, Op.25: No. 7 in C-Sharp Minor')
        track.set_length(312)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('20')
        track.set_title('12 Etudes, Op.25: No. 8 in D-Flat')
        track.set_length(66)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('21')
        track.set_title('12 Etudes, Op.25: No. 9 in G-Flat, "Butterfly Wings"')
        track.set_length(62)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('22')
        track.set_title('12 Etudes, Op.25: No. 10 in B Minor')
        track.set_length(244)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('23')
        track.set_title('12 Etudes, Op.25: No. 11 in A Minor "Winter Wind"')
        track.set_length(215)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('24')
        track.set_title('No. 12 in C Minor')
        track.set_length(168)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('25')
        track.set_title('Impromptu No. 1 in A-Flat, Op.29')
        track.set_length(233)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('26')
        track.set_title('Impromptu No. 2 in F-Sharp, Op.36')
        track.set_length(351)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('27')
        track.set_title('Impromptu No. 3 in G-Flat, Op.51')
        track.set_length(284)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('28')
        track.set_title('Impromptu No. 4 in C-Sharp Minor, Op. 66 "Fantaisie-Impromptu"')
        track.set_length(291)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        disc = expected.create_disc()
        disc.set_number(2)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('I. Grave - Doppio Movimento')
        track.set_length(331)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title(u'II. Scherzo - Pi\xf9 Lento - Tempo I')
        track.set_length(397)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title(u'III. Marche Fun\xe8bre (Lento)')
        track.set_length(503)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('IV. Finale (Presto)')
        track.set_length(97)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('I. Allegro Maestoso')
        track.set_length(533)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('II. Scherzo (Molto Vivace)')
        track.set_length(170)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('III. Largo')
        track.set_length(561)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('IV. Finale (Presto Non Tanto)')
        track.set_length(309)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Mazurka No. 54 in D: Allegro Non Troppo')
        track.set_length(71)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Mazurka No. 46 in C Op.67 No.3: Allegretto')
        track.set_length(88)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Mazurka No. 49 in A Minor Op. 68, No. 2: Lento')
        track.set_length(155)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Mazurka No. 5 in B-Flat Op. 7, No. 1: Vivace')
        track.set_length(140)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title('Introduction and Variations On a German National Air Op.posth. (KK 925-927)')
        track.set_length(387)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('14')
        track.set_title('Mazurka No. 58 in A-Flat: Poco Mosso')
        track.set_length(77)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('15')
        track.set_title('Berceuse in D-Flat, Op. 57: Andante')
        track.set_length(316)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('16')
        track.set_title('Polonaise No. 6 in A-Flat, Op. 53 -"Heroic": Maestoso')
        track.set_length(413)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        disc = expected.create_disc()
        disc.set_number(3)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('I. Allegro Maestoso')
        track.set_length(1215)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Berliner Philharmoniker')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Jerzy Semkow')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('II. Romance (Larghetto)')
        track.set_length(636)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Berliner Philharmoniker')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Jerzy Semkow')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('III. Rondo (Vivace)')
        track.set_length(619)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Berliner Philharmoniker')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Jerzy Semkow')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Piano Concerto No. 2 in F Minor, Op. 21: I. Maestoso')
        track.set_length(901)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Berliner Philharmoniker')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Janos Kulka')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Piano Concerto No. 2 in F Minor, Op. 21: II. Larghetto')
        track.set_length(583)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Berliner Philharmoniker')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Janos Kulka')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Piano Concerto No. 2 in F Minor, Op. 21: III. Allegro Vivace')
        track.set_length(524)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Berliner Philharmoniker')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Janos Kulka')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tam\xe1s V\xe1s\xe1ry')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        s = itunes.ReleaseScraper.from_string('https://itunes.apple.com/us/album/chopin-piano-works/id77261376')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_404(self):
        expected = NotFoundResult()
        expected.set_scraper_name(None)

        s = itunes.ReleaseScraper.from_string('http://itunes.apple.com/us/album/blubb/id999999999999')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_non_us_404(self):
        expected = NotFoundResult()
        expected.set_scraper_name(None)

        s = itunes.ReleaseScraper.from_string('http://itunes.apple.com/fr/album/blubb/id999999999999')
        r = s.get_result()

        self.assertEqual(expected, r)


class BandcampTest(TestCase):

    def test_album_with_band_name(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date(u'2012')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format('WEB release')

        expected.set_title(u'Love Sex Machine')

        artist = expected.create_artist()
        artist.set_name(u'Love Sex Machine')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.set_url('http://music.throatruinerrecords.com/album/love-sex-machine')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title(u'Anal On Deceased Virgin')
        track.set_length(335)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title(u'Deafening Peepshow')
        track.set_length(270)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title(u'Fucking Battle')
        track.set_length(157)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title(u'Antagonism Can STFU')
        track.set_length(179)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title(u'Plenty Of Feelings')
        track.set_length(147)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title(u'Vagina Curse')
        track.set_length(320)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title(u'Killed With A Monster Cock')
        track.set_length(284)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title(u'Warstrike Takes The Piss')
        track.set_length(275)
        disc.append_track(track)

        expected.append_disc(disc)

        s = bandcamp.ReleaseScraper.from_string('http://music.throatruinerrecords.com/album/love-sex-machine')
        r = s.get_result()

        self.assertEqual(expected, r)

    # there was a test with this name, but I don't know what it did...
    # def test_album_without_band_name(self):
    #     pass

    def test_album_with_various_artists(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date(u'2013')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format('WEB release')

        expected.set_title(u'Indietracks Compilation 2013')

        artist = expected.create_artist()
        artist.set_name(None)
        artist.set_various(True)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.set_url('http://indietracks.bandcamp.com/album/indietracks-compilation-2013')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title(u'If You Still Want Him')
        track.set_length(250)
        track_artist = expected.create_artist()
        track_artist.set_name(u'The French Defence')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title(u'Is Anybody Out There?')
        track.set_length(246)
        track_artist = expected.create_artist()
        track_artist.set_name(u'The Ballet')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title(u'Rulers And The States')
        track.set_length(165)
        track_artist = expected.create_artist()
        track_artist.set_name(u'bis')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title(u'Temporary Tattoo')
        track.set_length(171)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Lardpony')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title(u'Always Want Us To')
        track.set_length(192)
        track_artist = expected.create_artist()
        track_artist.set_name(u'EXPENSIVE')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title(u'Stockport')
        track.set_length(328)
        track_artist = expected.create_artist()
        track_artist.set_name(u'The Wake')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title(u'Secret')
        track.set_length(132)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Frozy')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title(u'Jackie')
        track.set_length(218)
        track_artist = expected.create_artist()
        track_artist.set_name(u'The Understudies')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title(u'Ticket Machine')
        track.set_length(184)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Making Marks')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title(u'Echoing Days')
        track.set_length(204)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Monnone Alone')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title(u'Swanwick Junction')
        track.set_length(172)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Northern Spies')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title(u'Terrible Things')
        track.set_length(141)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Owl & Mouse')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title(u"She'll Come Back for Indian Summer")
        track.set_length(218)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Alpaca Sports')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('14')
        track.set_title(u'Glockelbar')
        track.set_length(137)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Haiku Salut')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('15')
        track.set_title(u'Astronaut')
        track.set_length(190)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Woog Riots')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('16')
        track.set_title(u'Tut Tut Tut')
        track.set_length(150)
        track_artist = expected.create_artist()
        track_artist.set_name(u'The Tuts')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('17')
        track.set_title(u'Mosaic')
        track.set_length(161)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Fear Of Men')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('18')
        track.set_title(u'Only You')
        track.set_length(194)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Big Wave')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('19')
        track.set_title(u'The Things That You Said')
        track.set_length(200)
        track_artist = expected.create_artist()
        track_artist.set_name(u'The Fireworks')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('20')
        track.set_title(u'Glue')
        track.set_length(276)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Fever Dream')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('21')
        track.set_title(u'Slackjawed')
        track.set_length(175)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Tunabunny')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('22')
        track.set_title(u'Lie')
        track.set_length(224)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Cars Can Be Blue')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('23')
        track.set_title(u'Br\xe4nn\xf6')
        track.set_length(223)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Finnmark!')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('24')
        track.set_title(u'Sorry')
        track.set_length(166)
        track_artist = expected.create_artist()
        track_artist.set_name(u'The Art Club')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('25')
        track.set_title(u'Food')
        track.set_length(181)
        track_artist = expected.create_artist()
        track_artist.set_name(u'The Lovely Eggs')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('26')
        track.set_title(u'Clean Up Yr Own Shit, Pal')
        track.set_length(132)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Good Grief')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('27')
        track.set_title(u'Sycamore')
        track.set_length(162)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Martha')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('28')
        track.set_title(u'Disappear')
        track.set_length(147)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Bloomer')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('29')
        track.set_title(u'You Held My Hand')
        track.set_length(158)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Flowers')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('30')
        track.set_title(u'J.K.')
        track.set_length(139)
        track_artist = expected.create_artist()
        track_artist.set_name(u'David Leach')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('31')
        track.set_title(u'Always Thought')
        track.set_length(294)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Jupiter In Jars')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('32')
        track.set_title(u'My Old Friend')
        track.set_length(164)
        track_artist = expected.create_artist()
        track_artist.set_name(u"Enderby's Room")
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('33')
        track.set_title(u'I Got The Answer')
        track.set_length(172)
        track_artist = expected.create_artist()
        track_artist.set_name(u'The Magic Theatre')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('34')
        track.set_title(u'I Love You')
        track.set_length(178)
        track_artist = expected.create_artist()
        track_artist.set_name(u'The Wave Pictures')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('35')
        track.set_title(u'Pilot Light')
        track.set_length(234)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Pete Green')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('36')
        track.set_title(u"Let's Go Surfing")
        track.set_length(181)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Helen Love')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('37')
        track.set_title(u'Summer, You And Me')
        track.set_length(180)
        track_artist = expected.create_artist()
        track_artist.set_name(u'When Nalda Became Punk')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('38')
        track.set_title(u'Secret Wish')
        track.set_length(89)
        track_artist = expected.create_artist()
        track_artist.set_name(u'The McTells')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('39')
        track.set_title(u'Better Than Love')
        track.set_length(163)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Pale Spectres')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('40')
        track.set_title(u'Without You')
        track.set_length(147)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Milky Wimpshake')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('41')
        track.set_title(u"Let's Stay Undecided")
        track.set_length(181)
        track_artist = expected.create_artist()
        track_artist.set_name(u'The Soulboy Collective mit Antenne Danger')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('42')
        track.set_title(u'Age Of Victoria')
        track.set_length(261)
        track_artist = expected.create_artist()
        track_artist.set_name(u'The Secret History')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('43')
        track.set_title(u'Eating Me, Eating You')
        track.set_length(202)
        track_artist = expected.create_artist()
        track_artist.set_name(u'The Beautiful Word')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('44')
        track.set_title(u'Scared And Worried')
        track.set_length(142)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Without Feathers')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('45')
        track.set_title(u'Save Me')
        track.set_length(155)
        track_artist = expected.create_artist()
        track_artist.set_name(u'The Choo Choo Trains')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('46')
        track.set_title(u'Evil/Shy (Acoustic Version)')
        track.set_length(187)
        track_artist = expected.create_artist()
        track_artist.set_name(u'The Mini Skips')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('47')
        track.set_title(u'Slow Trains')
        track.set_length(201)
        track_artist = expected.create_artist()
        track_artist.set_name(u'anaesthetics')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        s = bandcamp.ReleaseScraper.from_string('http://indietracks.bandcamp.com/album/indietracks-compilation-2013')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_album_with_track_artist(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date(u'2012')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format('WEB release')

        expected.set_title(u'Love Everyday EP')

        artist = expected.create_artist()
        artist.set_name(u'Dumbfoundead')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.set_url('http://music.dumbfoundead.com/album/love-everyday-ep')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title(u'For You')
        track.set_length(91)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title(u'Love Everyday')
        track.set_length(211)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title(u'Stole the Show')
        track.set_length(177)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title(u'Love is a Song')
        track.set_length(292)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title(u'Body High ft. Breezy Lovejoy & Jose Rios')
        track.set_length(267)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title(u'Not Right Now ft. Wax')
        track.set_length(173)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title(u'Breezy Lovejoy - Paradise')
        track.set_length(202)
        track_artist = expected.create_artist()
        track_artist.set_name(u'Breezy Lovejoy')
        track_artist.set_various(False)
        track_artist.append_type(expected.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        expected.append_disc(disc)

        s = bandcamp.ReleaseScraper.from_string('http://music.dumbfoundead.com/album/love-everyday-ep')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_album_with_utf8_characters(self):
        expected = ReleaseResult()
        expected.set_scraper_name(None)

        release_event = expected.create_release_event()
        release_event.set_date(u'2012')
        release_event.set_country(None)
        expected.append_release_event(release_event)

        expected.set_format('WEB release')

        expected.set_title(u'Illusions')

        artist = expected.create_artist()
        artist.set_name(u'Approaching Nirvana')
        artist.set_various(False)
        artist.append_type(expected.ArtistTypes.MAIN)
        expected.append_release_artist(artist)

        expected.set_url('http://music.approachingnirvana.com/album/illusions')

        disc = expected.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title(u'Sugar High')
        track.set_length(162)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title(u'Illusion (feat. Brenton Mattheus)')
        track.set_length(267)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title(u'Beer Remastered')
        track.set_length(281)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title(u'Snowfall')
        track.set_length(270)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title(u'Love Theory')
        track.set_length(157)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title(u'Canc\xfan')
        track.set_length(257)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title(u'South Side')
        track.set_length(268)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title(u'Illusion (Instrumental)')
        track.set_length(267)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title(u'Love Theory (Instrumental)')
        track.set_length(157)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title(u'Illusion (Extended Mix) [feat. Brenton Mattheus]')
        track.set_length(372)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title(u'Beer Remastered (Extended Mix)')
        track.set_length(420)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title(u'Snowfall (Extended Mix)')
        track.set_length(424)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title(u'Love Theory (Extended Mix)')
        track.set_length(299)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('14')
        track.set_title(u'Canc\xfan (Extended Mix)')
        track.set_length(374)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('15')
        track.set_title(u'South Side (Extended Mix)')
        track.set_length(374)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('16')
        track.set_title(u'Illusions Continuous Mix')
        track.set_length(2018)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('17')
        track.set_title(u'Illusions Continuous Instrumental Mix')
        track.set_length(2018)
        disc.append_track(track)

        expected.append_disc(disc)

        s = bandcamp.ReleaseScraper.from_string('http://music.approachingnirvana.com/album/illusions')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_band_discography(self):
        expected = ListResult()
        expected.set_scraper_name(None)

        item = expected.create_item()
        item.set_name(u'Amanda Palmer \u2013 Who Killed Amanda Palmer [Alternate Tracks]')
        item.set_info('Release date: 2008-12-24')
        item.set_query(u'http://amandapalmer.bandcamp.com/album/who-killed-amanda-palmer-alternate-tracks?pk=459')
        item.set_url(u'http://amandapalmer.bandcamp.com/album/who-killed-amanda-palmer-alternate-tracks?pk=459')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'8in8 \u2013 Nighty Night')
        item.set_info('Release date: 2011-04-26')
        item.set_query(u'http://amandapalmer.bandcamp.com/album/nighty-night?pk=459')
        item.set_url(u'http://amandapalmer.bandcamp.com/album/nighty-night?pk=459')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Amanda Palmer & The Grand Theft Orchestra \u2013 Theatre Is Evil')
        item.set_info('Release date: 2012-09-11')
        item.set_query(u'http://amandapalmer.bandcamp.com/album/theatre-is-evil-2?pk=459')
        item.set_url(u'http://amandapalmer.bandcamp.com/album/theatre-is-evil-2?pk=459')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Amanda Palmer \u2013 Amanda Palmer Performs The Popular Hits Of Radiohead On Her Magical Ukulele')
        item.set_info('Release date: 2010-07-20')
        item.set_query(u'http://amandapalmer.bandcamp.com/album/amanda-palmer-performs-the-popular-hits-of-radiohead-on-her-magical-ukulele?pk=459')
        item.set_url(u'http://amandapalmer.bandcamp.com/album/amanda-palmer-performs-the-popular-hits-of-radiohead-on-her-magical-ukulele?pk=459')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Tristan Allen \u2013 Tristan Allen')
        item.set_info('Release date: 2010-12-12')
        item.set_query(u'http://amandapalmer.bandcamp.com/album/tristan-allen?pk=459')
        item.set_url(u'http://amandapalmer.bandcamp.com/album/tristan-allen?pk=459')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u"Amanda Palmer & Friends \u2013 AFP's Webcastacular NYC Extravaganzaca!")
        item.set_info('Release date: 2010-09-23')
        item.set_query(u'http://amandapalmer.bandcamp.com/album/afps-webcastacular-nyc-extravaganzaca?pk=459')
        item.set_url(u'http://amandapalmer.bandcamp.com/album/afps-webcastacular-nyc-extravaganzaca?pk=459')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Amanda Palmer \u2013 Who Killed Amanda Palmer')
        item.set_info('Release date: 2008-09-16')
        item.set_query(u'http://amandapalmer.bandcamp.com/album/who-killed-amanda-palmer?pk=459')
        item.set_url(u'http://amandapalmer.bandcamp.com/album/who-killed-amanda-palmer?pk=459')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Amanda Palmer & Murder By Death \u2013 7 Series (Part 3)')
        item.set_info('Release date: 2009-05-15')
        item.set_query(u'http://amandapalmer.bandcamp.com/album/7-series-part-3?pk=459')
        item.set_url(u'http://amandapalmer.bandcamp.com/album/7-series-part-3?pk=459')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Amanda Palmer \u2013 Amanda Palmer Goes Down Under')
        item.set_info('Release date: 2011-01-21')
        item.set_query(u'http://amandapalmer.bandcamp.com/album/amanda-palmer-goes-down-under?pk=459')
        item.set_url(u'http://amandapalmer.bandcamp.com/album/amanda-palmer-goes-down-under?pk=459')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Amanda Palmer, The Young Punx, and Peaches \u2013 Map of Tasmania: The Remix Project')
        item.set_info('Release date: 2011-04-10')
        item.set_query(u'http://amandapalmer.bandcamp.com/album/map-of-tasmania-the-remix-project?pk=459')
        item.set_url(u'http://amandapalmer.bandcamp.com/album/map-of-tasmania-the-remix-project?pk=459')
        expected.append_item(item)

        s = bandcamp.DiscographyScraper.from_string('http://amandapalmer.bandcamp.com')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_band_discogrpahy_non_bandcamp_url(self):
        expected = ListResult()
        expected.set_scraper_name(None)

        item = expected.create_item()
        item.set_name(u'Sufjan Stevens \u2013 All Delighted People EP')
        item.set_info('Release date: 2010-08-20')
        item.set_query(u'http://music.sufjan.com/album/all-delighted-people-ep?pk=459')
        item.set_url(u'http://music.sufjan.com/album/all-delighted-people-ep?pk=459')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Sufjan Stevens \u2013 Illinois')
        item.set_info('Release date: 2005-07-05')
        item.set_query(u'http://music.sufjan.com/album/illinois?pk=459')
        item.set_url(u'http://music.sufjan.com/album/illinois?pk=459')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Sufjan Stevens \u2013 Songs for Christmas')
        item.set_info('Release date: 2006-11-21')
        item.set_query(u'http://music.sufjan.com/album/songs-for-christmas?pk=459')
        item.set_url(u'http://music.sufjan.com/album/songs-for-christmas?pk=459')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Sufjan Stevens \u2013 A Sun Came')
        item.set_info('Release date: 2004-07-20')
        item.set_query(u'http://music.sufjan.com/album/a-sun-came?pk=459')
        item.set_url(u'http://music.sufjan.com/album/a-sun-came?pk=459')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Sufjan Stevens \u2013 The Avalanche')
        item.set_info('Release date: 2006-07-11')
        item.set_query(u'http://music.sufjan.com/album/the-avalanche?pk=459')
        item.set_url(u'http://music.sufjan.com/album/the-avalanche?pk=459')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Sufjan Stevens \u2013 The BQE')
        item.set_info('Release date: 2009-10-20')
        item.set_query(u'http://music.sufjan.com/album/the-bqe?pk=459')
        item.set_url(u'http://music.sufjan.com/album/the-bqe?pk=459')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Sufjan Stevens \u2013 Silver & Gold')
        item.set_info('Release date: 2012-11-13')
        item.set_query(u'http://music.sufjan.com/album/silver-gold?pk=459')
        item.set_url(u'http://music.sufjan.com/album/silver-gold?pk=459')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Sufjan Stevens \u2013 Michigan')
        item.set_info('Release date: 2003-07-01')
        item.set_query(u'http://music.sufjan.com/album/michigan?pk=459')
        item.set_url(u'http://music.sufjan.com/album/michigan?pk=459')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Sufjan Stevens \u2013 Enjoy Your Rabbit')
        item.set_info('Release date: 2002-04-16')
        item.set_query(u'http://music.sufjan.com/album/enjoy-your-rabbit?pk=459')
        item.set_url(u'http://music.sufjan.com/album/enjoy-your-rabbit?pk=459')
        expected.append_item(item)

        item = expected.create_item()
        item.set_name(u'Sufjan Stevens \u2013 The Age of Adz')
        item.set_info('Release date: 2010-10-12')
        item.set_query(u'http://music.sufjan.com/album/the-age-of-adz?pk=459')
        item.set_url(u'http://music.sufjan.com/album/the-age-of-adz?pk=459')
        expected.append_item(item)

        s = bandcamp.DiscographyScraper('http://music.sufjan.com')
        r = s.get_result()

        self.assertEqual(expected, r)

    def test_404(self):
        expected = NotFoundResult()
        expected.set_scraper_name(None)

        s = bandcamp.ReleaseScraper.from_string('http://blubb.bla.com/album/blubb')
        r = s.get_result()

        self.assertEqual(expected, r)


class DescriptionVisitorTest(TestCase):

    def setUp(self):
        super(DescriptionVisitorTest, self).setUp()

        self.result = ReleaseResult()
        self.result.set_scraper_name(None)

        release_event = self.result.create_release_event()
        release_event.set_date('2007-05-25')
        release_event.set_country('Germany')
        self.result.append_release_event(release_event)

        self.result.set_format(u'4\xd7CD, Album + Live')

        self.result.append_genre('Electronic')
        self.result.append_genre('Rock')

        self.result.append_style('Goth Rock')
        self.result.append_style('Synth-pop')

        label_id = self.result.create_label_id()
        label_id.set_label('Trisol')
        label_id.append_catalogue_nr('TRI 303 CD')
        label_id.append_catalogue_nr('Eine andere CatNr')
        self.result.append_label_id(label_id)

        label_id = self.result.create_label_id()
        label_id.set_label('Ein anderes Label')
        label_id.append_catalogue_nr('Nr.1')
        label_id.append_catalogue_nr('Nr.2')
        label_id.append_catalogue_nr('Nr.3')
        self.result.append_label_id(label_id)

        label_id = self.result.create_label_id()
        label_id.set_label('Ein letztes Label')
        label_id.append_catalogue_nr('Und eine letzte Nummer')
        self.result.append_label_id(label_id)

        self.result.set_title('Once in a Lifetime')

        artist = self.result.create_artist()
        artist.set_name('ASP')
        artist.set_various(False)
        artist.append_type(self.result.ArtistTypes.MAIN)
        self.result.append_release_artist(artist)

        artist = self.result.create_artist()
        artist.set_name('Chamber')
        artist.set_various(False)
        artist.append_type(self.result.ArtistTypes.MAIN)
        self.result.append_release_artist(artist)

        artist = self.result.create_artist()
        artist.set_name('Dritter Main Artist')
        artist.set_various(False)
        artist.append_type(self.result.ArtistTypes.MAIN)
        self.result.append_release_artist(artist)

        artist = self.result.create_artist()
        artist.set_name('Featuring Artist')
        artist.set_various(False)
        artist.append_type(self.result.ArtistTypes.FEATURING)
        self.result.append_release_artist(artist)

        self.result.set_url('http://musicbrainz.org/release/79de4a0c-b469-4dfd-b23c-129462b741fb')

        disc = self.result.create_disc()
        disc.set_number(1)
        disc.set_title('Eine tolle CD')

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Once in a Lifetime, Part 1')
        track.set_length(351)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title(u'A Dead Man\u2019s Song')
        track.set_length(312)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Noch ein Artist')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.FEATURING)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Versuchung')
        track.set_length(345)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Torn')
        track.set_length(304)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Demon Love')
        track.set_length(272)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('The Paperhearted Ghost')
        track.set_length(283)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('A Tale of Real Love')
        track.set_length(316)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Ein Remixer')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.REMIXER)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Hunger')
        track.set_length(289)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('The Truth About Snow-White')
        track.set_length(240)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('She Wore Shadows')
        track.set_length(276)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Und wir tanzten (Ungeschickte Liebesbriefe)')
        track.set_length(317)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Once in a Lifetime, Part 2 (reprise)')
        track.set_length(164)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        self.result.append_disc(disc)

        disc = self.result.create_disc()
        disc.set_number(2)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title(u'K\xfcss mich')
        track.set_length(384)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Silence - Release')
        track.set_length(225)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Solitude')
        track.set_length(220)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Die Ballade von der Erweckung')
        track.set_length(527)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Another Conversation')
        track.set_length(201)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Sing Child')
        track.set_length(449)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Ich will brennen')
        track.set_length(300)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Toscana')
        track.set_length(374)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Ride On')
        track.set_length(222)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Hometown')
        track.set_length(181)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Werben')
        track.set_length(293)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Once in a Lifetime, Part 3 (Finale)')
        track.set_length(608)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        self.result.append_disc(disc)

        disc = self.result.create_disc()
        disc.set_number(3)
        disc.set_title('Hier noch ein Titel')

        track = disc.create_track()
        track.set_number('1')
        track.set_title(u'H\xe4sslich')
        track.set_length(145)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Backstage (All Areas)')
        track.set_length(573)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title(u'Paracetamoltr\xe4ume')
        track.set_length(517)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title(u'Auszug aus \u201eTremendista\u201c')
        track.set_length(1473)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name(u'Ralph M\xfcller')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.FEATURING)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Campari O')
        track.set_length(159)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        self.result.append_disc(disc)

        disc = self.result.create_disc()
        disc.set_number(4)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Sicamore Trees (ASP soundcheck out-take)')
        track.set_length(94)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Demon Love')
        track.set_length(275)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('The Truth About Snow-White')
        track.set_length(275)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('She Wore Shadows')
        track.set_length(319)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Sing Child')
        track.set_length(469)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Hometown')
        track.set_length(221)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Dritter Track Artist')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Hunger')
        track.set_length(274)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Silence - Release')
        track.set_length(208)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('She Moved Through the Fair (ASP soundcheck out-take)')
        track.set_length(120)
        track_artist = self.result.create_artist()
        track_artist.set_name('ASP')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        track_artist = self.result.create_artist()
        track_artist.set_name('Chamber')
        track_artist.set_various(False)
        track_artist.append_type(self.result.ArtistTypes.MAIN)
        track.append_artist(track_artist)
        disc.append_track(track)

        self.result.append_disc(disc)

    def test_bbcode_generic(self):
        visitor = DescriptionVisitor(description_format='bbcode-generic')

        expected = u"""[size=4][b]ASP, Chamber & Dritter Main Artist feat. Featuring Artist \u2013 Once in a Lifetime[/b][/size]

[b]Label/Cat#:[/b] Trisol \u2013 TRI 303 CD or Eine andere CatNr, Ein anderes Label \u2013 Nr.1 or Nr.2 or Nr.3, Ein letztes Label \u2013 Und eine letzte Nummer
[b]Country:[/b] Germany
[b]Year:[/b] 2007-05-25
[b]Genre:[/b] Electronic, Rock
[b]Style:[/b] Goth Rock, Synth-pop
[b]Format:[/b] 4×CD, Album + Live

[size=3][b]Disc 1: [i]Eine tolle CD[/i][/b][/size]
[b]1.[/b] ASP & Chamber – Once in a Lifetime, Part 1 [i](05:51)[/i]
[b]2.[/b] ASP & Chamber – A Dead Man’s Song (feat. Noch ein Artist) [i](05:12)[/i]
[b]3.[/b] ASP & Chamber – Versuchung [i](05:45)[/i]
[b]4.[/b] ASP & Chamber – Torn [i](05:04)[/i]
[b]5.[/b] ASP & Chamber – Demon Love [i](04:32)[/i]
[b]6.[/b] ASP & Chamber – The Paperhearted Ghost [i](04:43)[/i]
[b]7.[/b] ASP & Chamber – A Tale of Real Love [i](05:16)[/i]
[b]8.[/b] ASP & Chamber – Hunger [i](04:49)[/i]
[b]9.[/b] ASP & Chamber – The Truth About Snow-White [i](04:00)[/i]
[b]10.[/b] ASP & Chamber – She Wore Shadows [i](04:36)[/i]
[b]11.[/b] ASP & Chamber – Und wir tanzten (Ungeschickte Liebesbriefe) [i](05:17)[/i]
[b]12.[/b] ASP & Chamber – Once in a Lifetime, Part 2 (reprise) [i](02:44)[/i]

[size=3][b]Disc 2[/b][/size]
[b]1.[/b] ASP & Chamber – Küss mich [i](06:24)[/i]
[b]2.[/b] ASP & Chamber – Silence - Release [i](03:45)[/i]
[b]3.[/b] ASP & Chamber – Solitude [i](03:40)[/i]
[b]4.[/b] ASP & Chamber – Die Ballade von der Erweckung [i](08:47)[/i]
[b]5.[/b] ASP & Chamber – Another Conversation [i](03:21)[/i]
[b]6.[/b] ASP & Chamber – Sing Child [i](07:29)[/i]
[b]7.[/b] ASP & Chamber – Ich will brennen [i](05:00)[/i]
[b]8.[/b] ASP & Chamber – Toscana [i](06:14)[/i]
[b]9.[/b] ASP & Chamber – Ride On [i](03:42)[/i]
[b]10.[/b] ASP & Chamber – Hometown [i](03:01)[/i]
[b]11.[/b] ASP & Chamber – Werben [i](04:53)[/i]
[b]12.[/b] ASP & Chamber – Once in a Lifetime, Part 3 (Finale) [i](10:08)[/i]

[size=3][b]Disc 3: [i]Hier noch ein Titel[/i][/b][/size]
[b]1.[/b] ASP & Chamber – Hässlich [i](02:25)[/i]
[b]2.[/b] ASP & Chamber – Backstage (All Areas) [i](09:33)[/i]
[b]3.[/b] ASP & Chamber – Paracetamolträume [i](08:37)[/i]
[b]4.[/b] ASP & Chamber – Auszug aus „Tremendista“ (feat. Ralph Müller) [i](24:33)[/i]
[b]5.[/b] ASP & Chamber – Campari O [i](02:39)[/i]

[size=3][b]Disc 4[/b][/size]
[b]1.[/b] ASP & Chamber – Sicamore Trees (ASP soundcheck out-take) [i](01:34)[/i]
[b]2.[/b] ASP & Chamber – Demon Love [i](04:35)[/i]
[b]3.[/b] ASP & Chamber – The Truth About Snow-White [i](04:35)[/i]
[b]4.[/b] ASP & Chamber – She Wore Shadows [i](05:19)[/i]
[b]5.[/b] ASP & Chamber – Sing Child [i](07:49)[/i]
[b]6.[/b] ASP, Chamber & Dritter Track Artist – Hometown [i](03:41)[/i]
[b]7.[/b] ASP & Chamber – Hunger [i](04:34)[/i]
[b]8.[/b] ASP & Chamber – Silence - Release [i](03:28)[/i]
[b]9.[/b] ASP & Chamber – She Moved Through the Fair (ASP soundcheck out-take) [i](02:00)[/i]

More information: [url]http://musicbrainz.org/release/79de4a0c-b469-4dfd-b23c-129462b741fb[/url]"""

        self.assertEqual(expected, visitor.visit(self.result))

    def test_whatcd(self):
        visitor = DescriptionVisitor(description_format='whatcd')

        expected = u"""[size=5][b][artist]ASP[/artist], [artist]Chamber[/artist] & [artist]Dritter Main Artist[/artist] feat. [artist]Featuring Artist[/artist] \u2013 Once in a Lifetime[/b][/size]
[b]Label/Cat#:[/b] [url=https://ssl.what.cd/torrents.php?recordlabel=Trisol]Trisol[/url] \u2013 TRI 303 CD or Eine andere CatNr, [url=https://ssl.what.cd/torrents.php?recordlabel=Ein%20anderes%20Label]Ein anderes Label[/url] \u2013 Nr.1 or Nr.2 or Nr.3, [url=https://ssl.what.cd/torrents.php?recordlabel=Ein%20letztes%20Label]Ein letztes Label[/url] \u2013 Und eine letzte Nummer
[b]Country:[/b] Germany
[b]Year:[/b] 2007-05-25
[b]Genre:[/b] [url=https://ssl.what.cd/torrents.php?taglist=Electronic]Electronic[/url], [url=https://ssl.what.cd/torrents.php?taglist=Rock]Rock[/url]
[b]Style:[/b] [url=https://ssl.what.cd/torrents.php?taglist=Goth.Rock]Goth Rock[/url], [url=https://ssl.what.cd/torrents.php?taglist=Synth-pop]Synth-pop[/url]
[b]Format:[/b] 4×CD, Album + Live

[size=4][b]Disc 1: [i]Eine tolle CD[/i][/b][/size]
[b]1.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Once in a Lifetime, Part 1 [i](05:51)[/i]
[b]2.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – A Dead Man’s Song (feat. [artist]Noch ein Artist[/artist]) [i](05:12)[/i]
[b]3.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Versuchung [i](05:45)[/i]
[b]4.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Torn [i](05:04)[/i]
[b]5.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Demon Love [i](04:32)[/i]
[b]6.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – The Paperhearted Ghost [i](04:43)[/i]
[b]7.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – A Tale of Real Love [i](05:16)[/i]
[b]8.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Hunger [i](04:49)[/i]
[b]9.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – The Truth About Snow-White [i](04:00)[/i]
[b]10.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – She Wore Shadows [i](04:36)[/i]
[b]11.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Und wir tanzten (Ungeschickte Liebesbriefe) [i](05:17)[/i]
[b]12.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Once in a Lifetime, Part 2 (reprise) [i](02:44)[/i]

[size=4][b]Disc 2[/b][/size]
[b]1.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Küss mich [i](06:24)[/i]
[b]2.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Silence - Release [i](03:45)[/i]
[b]3.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Solitude [i](03:40)[/i]
[b]4.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Die Ballade von der Erweckung [i](08:47)[/i]
[b]5.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Another Conversation [i](03:21)[/i]
[b]6.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Sing Child [i](07:29)[/i]
[b]7.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Ich will brennen [i](05:00)[/i]
[b]8.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Toscana [i](06:14)[/i]
[b]9.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Ride On [i](03:42)[/i]
[b]10.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Hometown [i](03:01)[/i]
[b]11.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Werben [i](04:53)[/i]
[b]12.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Once in a Lifetime, Part 3 (Finale) [i](10:08)[/i]

[size=4][b]Disc 3: [i]Hier noch ein Titel[/i][/b][/size]
[b]1.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Hässlich [i](02:25)[/i]
[b]2.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Backstage (All Areas) [i](09:33)[/i]
[b]3.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Paracetamolträume [i](08:37)[/i]
[b]4.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Auszug aus „Tremendista“ (feat. [artist]Ralph Müller[/artist]) [i](24:33)[/i]
[b]5.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Campari O [i](02:39)[/i]

[size=4][b]Disc 4[/b][/size]
[b]1.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Sicamore Trees (ASP soundcheck out-take) [i](01:34)[/i]
[b]2.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Demon Love [i](04:35)[/i]
[b]3.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – The Truth About Snow-White [i](04:35)[/i]
[b]4.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – She Wore Shadows [i](05:19)[/i]
[b]5.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Sing Child [i](07:49)[/i]
[b]6.[/b] [artist]ASP[/artist], [artist]Chamber[/artist] & [artist]Dritter Track Artist[/artist] – Hometown [i](03:41)[/i]
[b]7.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Hunger [i](04:34)[/i]
[b]8.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Silence - Release [i](03:28)[/i]
[b]9.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – She Moved Through the Fair (ASP soundcheck out-take) [i](02:00)[/i]

More information: http://musicbrainz.org/release/79de4a0c-b469-4dfd-b23c-129462b741fb"""

        self.assertEqual(expected, visitor.visit(self.result))

    def test_whatcd_tracksonly(self):
        visitor = DescriptionVisitor(description_format='whatcd-tracks-only')

        expected = u"""[size=4][b]Disc 1: [i]Eine tolle CD[/i][/b][/size]
[b]1.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Once in a Lifetime, Part 1 [i](05:51)[/i]
[b]2.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – A Dead Man’s Song (feat. [artist]Noch ein Artist[/artist]) [i](05:12)[/i]
[b]3.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Versuchung [i](05:45)[/i]
[b]4.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Torn [i](05:04)[/i]
[b]5.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Demon Love [i](04:32)[/i]
[b]6.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – The Paperhearted Ghost [i](04:43)[/i]
[b]7.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – A Tale of Real Love [i](05:16)[/i]
[b]8.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Hunger [i](04:49)[/i]
[b]9.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – The Truth About Snow-White [i](04:00)[/i]
[b]10.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – She Wore Shadows [i](04:36)[/i]
[b]11.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Und wir tanzten (Ungeschickte Liebesbriefe) [i](05:17)[/i]
[b]12.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Once in a Lifetime, Part 2 (reprise) [i](02:44)[/i]

[size=4][b]Disc 2[/b][/size]
[b]1.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Küss mich [i](06:24)[/i]
[b]2.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Silence - Release [i](03:45)[/i]
[b]3.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Solitude [i](03:40)[/i]
[b]4.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Die Ballade von der Erweckung [i](08:47)[/i]
[b]5.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Another Conversation [i](03:21)[/i]
[b]6.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Sing Child [i](07:29)[/i]
[b]7.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Ich will brennen [i](05:00)[/i]
[b]8.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Toscana [i](06:14)[/i]
[b]9.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Ride On [i](03:42)[/i]
[b]10.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Hometown [i](03:01)[/i]
[b]11.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Werben [i](04:53)[/i]
[b]12.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Once in a Lifetime, Part 3 (Finale) [i](10:08)[/i]

[size=4][b]Disc 3: [i]Hier noch ein Titel[/i][/b][/size]
[b]1.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Hässlich [i](02:25)[/i]
[b]2.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Backstage (All Areas) [i](09:33)[/i]
[b]3.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Paracetamolträume [i](08:37)[/i]
[b]4.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Auszug aus „Tremendista“ (feat. [artist]Ralph Müller[/artist]) [i](24:33)[/i]
[b]5.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Campari O [i](02:39)[/i]

[size=4][b]Disc 4[/b][/size]
[b]1.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Sicamore Trees (ASP soundcheck out-take) [i](01:34)[/i]
[b]2.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Demon Love [i](04:35)[/i]
[b]3.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – The Truth About Snow-White [i](04:35)[/i]
[b]4.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – She Wore Shadows [i](05:19)[/i]
[b]5.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Sing Child [i](07:49)[/i]
[b]6.[/b] [artist]ASP[/artist], [artist]Chamber[/artist] & [artist]Dritter Track Artist[/artist] – Hometown [i](03:41)[/i]
[b]7.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Hunger [i](04:34)[/i]
[b]8.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – Silence - Release [i](03:28)[/i]
[b]9.[/b] [artist]ASP[/artist] & [artist]Chamber[/artist] – She Moved Through the Fair (ASP soundcheck out-take) [i](02:00)[/i]

More information: http://musicbrainz.org/release/79de4a0c-b469-4dfd-b23c-129462b741fb"""

        self.assertEqual(expected, visitor.visit(self.result))

    def test_wafflesfm(self):
        visitor = DescriptionVisitor(description_format='wafflesfm')

        expected = u"""[size=4][b][artist="ASP"], [artist="Chamber"] & [artist="Dritter Main Artist"] feat. [artist="Featuring Artist"] \u2013 Once in a Lifetime[/b][/size]
[b]Label/Cat#:[/b] Trisol \u2013 TRI 303 CD or Eine andere CatNr, Ein anderes Label \u2013 Nr.1 or Nr.2 or Nr.3, Ein letztes Label \u2013 Und eine letzte Nummer
[b]Country:[/b] Germany
[b]Year:[/b] 2007-05-25
[b]Genre:[/b] [url=https://www.waffles.fm/tags.php?tag="electronic"]Electronic[/url], [url=https://www.waffles.fm/tags.php?tag="rock"]Rock[/url]
[b]Style:[/b] [url=https://www.waffles.fm/tags.php?tag="goth%20rock"]Goth Rock[/url], [url=https://www.waffles.fm/tags.php?tag="synth-pop"]Synth-pop[/url]
[b]Format:[/b] 4×CD, Album + Live

[size=3][b]Disc 1: [i]Eine tolle CD[/i][/b][/size]
[b]1.[/b] [artist="ASP"] & [artist="Chamber"] – Once in a Lifetime, Part 1 [i](05:51)[/i]
[b]2.[/b] [artist="ASP"] & [artist="Chamber"] – A Dead Man’s Song (feat. [artist="Noch ein Artist"]) [i](05:12)[/i]
[b]3.[/b] [artist="ASP"] & [artist="Chamber"] – Versuchung [i](05:45)[/i]
[b]4.[/b] [artist="ASP"] & [artist="Chamber"] – Torn [i](05:04)[/i]
[b]5.[/b] [artist="ASP"] & [artist="Chamber"] – Demon Love [i](04:32)[/i]
[b]6.[/b] [artist="ASP"] & [artist="Chamber"] – The Paperhearted Ghost [i](04:43)[/i]
[b]7.[/b] [artist="ASP"] & [artist="Chamber"] – A Tale of Real Love [i](05:16)[/i]
[b]8.[/b] [artist="ASP"] & [artist="Chamber"] – Hunger [i](04:49)[/i]
[b]9.[/b] [artist="ASP"] & [artist="Chamber"] – The Truth About Snow-White [i](04:00)[/i]
[b]10.[/b] [artist="ASP"] & [artist="Chamber"] – She Wore Shadows [i](04:36)[/i]
[b]11.[/b] [artist="ASP"] & [artist="Chamber"] – Und wir tanzten (Ungeschickte Liebesbriefe) [i](05:17)[/i]
[b]12.[/b] [artist="ASP"] & [artist="Chamber"] – Once in a Lifetime, Part 2 (reprise) [i](02:44)[/i]

[size=3][b]Disc 2[/b][/size]
[b]1.[/b] [artist="ASP"] & [artist="Chamber"] – Küss mich [i](06:24)[/i]
[b]2.[/b] [artist="ASP"] & [artist="Chamber"] – Silence - Release [i](03:45)[/i]
[b]3.[/b] [artist="ASP"] & [artist="Chamber"] – Solitude [i](03:40)[/i]
[b]4.[/b] [artist="ASP"] & [artist="Chamber"] – Die Ballade von der Erweckung [i](08:47)[/i]
[b]5.[/b] [artist="ASP"] & [artist="Chamber"] – Another Conversation [i](03:21)[/i]
[b]6.[/b] [artist="ASP"] & [artist="Chamber"] – Sing Child [i](07:29)[/i]
[b]7.[/b] [artist="ASP"] & [artist="Chamber"] – Ich will brennen [i](05:00)[/i]
[b]8.[/b] [artist="ASP"] & [artist="Chamber"] – Toscana [i](06:14)[/i]
[b]9.[/b] [artist="ASP"] & [artist="Chamber"] – Ride On [i](03:42)[/i]
[b]10.[/b] [artist="ASP"] & [artist="Chamber"] – Hometown [i](03:01)[/i]
[b]11.[/b] [artist="ASP"] & [artist="Chamber"] – Werben [i](04:53)[/i]
[b]12.[/b] [artist="ASP"] & [artist="Chamber"] – Once in a Lifetime, Part 3 (Finale) [i](10:08)[/i]

[size=3][b]Disc 3: [i]Hier noch ein Titel[/i][/b][/size]
[b]1.[/b] [artist="ASP"] & [artist="Chamber"] – Hässlich [i](02:25)[/i]
[b]2.[/b] [artist="ASP"] & [artist="Chamber"] – Backstage (All Areas) [i](09:33)[/i]
[b]3.[/b] [artist="ASP"] & [artist="Chamber"] – Paracetamolträume [i](08:37)[/i]
[b]4.[/b] [artist="ASP"] & [artist="Chamber"] – Auszug aus „Tremendista“ (feat. [artist="Ralph Müller"]) [i](24:33)[/i]
[b]5.[/b] [artist="ASP"] & [artist="Chamber"] – Campari O [i](02:39)[/i]

[size=3][b]Disc 4[/b][/size]
[b]1.[/b] [artist="ASP"] & [artist="Chamber"] – Sicamore Trees (ASP soundcheck out-take) [i](01:34)[/i]
[b]2.[/b] [artist="ASP"] & [artist="Chamber"] – Demon Love [i](04:35)[/i]
[b]3.[/b] [artist="ASP"] & [artist="Chamber"] – The Truth About Snow-White [i](04:35)[/i]
[b]4.[/b] [artist="ASP"] & [artist="Chamber"] – She Wore Shadows [i](05:19)[/i]
[b]5.[/b] [artist="ASP"] & [artist="Chamber"] – Sing Child [i](07:49)[/i]
[b]6.[/b] [artist="ASP"], [artist="Chamber"] & [artist="Dritter Track Artist"] – Hometown [i](03:41)[/i]
[b]7.[/b] [artist="ASP"] & [artist="Chamber"] – Hunger [i](04:34)[/i]
[b]8.[/b] [artist="ASP"] & [artist="Chamber"] – Silence - Release [i](03:28)[/i]
[b]9.[/b] [artist="ASP"] & [artist="Chamber"] – She Moved Through the Fair (ASP soundcheck out-take) [i](02:00)[/i]

More information: http://musicbrainz.org/release/79de4a0c-b469-4dfd-b23c-129462b741fb"""

        self.assertEqual(expected, visitor.visit(self.result))

    def test_wafflesfm_tracks_only(self):
        visitor = DescriptionVisitor(description_format='wafflesfm-tracks-only')

        expected = u"""[size=3][b]Disc 1: [i]Eine tolle CD[/i][/b][/size]
[b]1.[/b] [artist="ASP"] & [artist="Chamber"] – Once in a Lifetime, Part 1 [i](05:51)[/i]
[b]2.[/b] [artist="ASP"] & [artist="Chamber"] – A Dead Man’s Song (feat. [artist="Noch ein Artist"]) [i](05:12)[/i]
[b]3.[/b] [artist="ASP"] & [artist="Chamber"] – Versuchung [i](05:45)[/i]
[b]4.[/b] [artist="ASP"] & [artist="Chamber"] – Torn [i](05:04)[/i]
[b]5.[/b] [artist="ASP"] & [artist="Chamber"] – Demon Love [i](04:32)[/i]
[b]6.[/b] [artist="ASP"] & [artist="Chamber"] – The Paperhearted Ghost [i](04:43)[/i]
[b]7.[/b] [artist="ASP"] & [artist="Chamber"] – A Tale of Real Love [i](05:16)[/i]
[b]8.[/b] [artist="ASP"] & [artist="Chamber"] – Hunger [i](04:49)[/i]
[b]9.[/b] [artist="ASP"] & [artist="Chamber"] – The Truth About Snow-White [i](04:00)[/i]
[b]10.[/b] [artist="ASP"] & [artist="Chamber"] – She Wore Shadows [i](04:36)[/i]
[b]11.[/b] [artist="ASP"] & [artist="Chamber"] – Und wir tanzten (Ungeschickte Liebesbriefe) [i](05:17)[/i]
[b]12.[/b] [artist="ASP"] & [artist="Chamber"] – Once in a Lifetime, Part 2 (reprise) [i](02:44)[/i]

[size=3][b]Disc 2[/b][/size]
[b]1.[/b] [artist="ASP"] & [artist="Chamber"] – Küss mich [i](06:24)[/i]
[b]2.[/b] [artist="ASP"] & [artist="Chamber"] – Silence - Release [i](03:45)[/i]
[b]3.[/b] [artist="ASP"] & [artist="Chamber"] – Solitude [i](03:40)[/i]
[b]4.[/b] [artist="ASP"] & [artist="Chamber"] – Die Ballade von der Erweckung [i](08:47)[/i]
[b]5.[/b] [artist="ASP"] & [artist="Chamber"] – Another Conversation [i](03:21)[/i]
[b]6.[/b] [artist="ASP"] & [artist="Chamber"] – Sing Child [i](07:29)[/i]
[b]7.[/b] [artist="ASP"] & [artist="Chamber"] – Ich will brennen [i](05:00)[/i]
[b]8.[/b] [artist="ASP"] & [artist="Chamber"] – Toscana [i](06:14)[/i]
[b]9.[/b] [artist="ASP"] & [artist="Chamber"] – Ride On [i](03:42)[/i]
[b]10.[/b] [artist="ASP"] & [artist="Chamber"] – Hometown [i](03:01)[/i]
[b]11.[/b] [artist="ASP"] & [artist="Chamber"] – Werben [i](04:53)[/i]
[b]12.[/b] [artist="ASP"] & [artist="Chamber"] – Once in a Lifetime, Part 3 (Finale) [i](10:08)[/i]

[size=3][b]Disc 3: [i]Hier noch ein Titel[/i][/b][/size]
[b]1.[/b] [artist="ASP"] & [artist="Chamber"] – Hässlich [i](02:25)[/i]
[b]2.[/b] [artist="ASP"] & [artist="Chamber"] – Backstage (All Areas) [i](09:33)[/i]
[b]3.[/b] [artist="ASP"] & [artist="Chamber"] – Paracetamolträume [i](08:37)[/i]
[b]4.[/b] [artist="ASP"] & [artist="Chamber"] – Auszug aus „Tremendista“ (feat. [artist="Ralph Müller"]) [i](24:33)[/i]
[b]5.[/b] [artist="ASP"] & [artist="Chamber"] – Campari O [i](02:39)[/i]

[size=3][b]Disc 4[/b][/size]
[b]1.[/b] [artist="ASP"] & [artist="Chamber"] – Sicamore Trees (ASP soundcheck out-take) [i](01:34)[/i]
[b]2.[/b] [artist="ASP"] & [artist="Chamber"] – Demon Love [i](04:35)[/i]
[b]3.[/b] [artist="ASP"] & [artist="Chamber"] – The Truth About Snow-White [i](04:35)[/i]
[b]4.[/b] [artist="ASP"] & [artist="Chamber"] – She Wore Shadows [i](05:19)[/i]
[b]5.[/b] [artist="ASP"] & [artist="Chamber"] – Sing Child [i](07:49)[/i]
[b]6.[/b] [artist="ASP"], [artist="Chamber"] & [artist="Dritter Track Artist"] – Hometown [i](03:41)[/i]
[b]7.[/b] [artist="ASP"] & [artist="Chamber"] – Hunger [i](04:34)[/i]
[b]8.[/b] [artist="ASP"] & [artist="Chamber"] – Silence - Release [i](03:28)[/i]
[b]9.[/b] [artist="ASP"] & [artist="Chamber"] – She Moved Through the Fair (ASP soundcheck out-take) [i](02:00)[/i]

More information: http://musicbrainz.org/release/79de4a0c-b469-4dfd-b23c-129462b741fb"""

        self.assertEqual(expected, visitor.visit(self.result))

    def test_plain(self):
        visitor = DescriptionVisitor(description_format='plain')

        expected = u"""ASP, Chamber & Dritter Main Artist feat. Featuring Artist \u2013 Once in a Lifetime

Label/Cat#: Trisol \u2013 TRI 303 CD or Eine andere CatNr, Ein anderes Label \u2013 Nr.1 or Nr.2 or Nr.3, Ein letztes Label \u2013 Und eine letzte Nummer
Country: Germany
Year: 2007-05-25
Genre: Electronic, Rock
Style: Goth Rock, Synth-pop
Format: 4×CD, Album + Live

Disc 1: Eine tolle CD
1. ASP & Chamber – Once in a Lifetime, Part 1 (05:51)
2. ASP & Chamber – A Dead Man’s Song (feat. Noch ein Artist) (05:12)
3. ASP & Chamber – Versuchung (05:45)
4. ASP & Chamber – Torn (05:04)
5. ASP & Chamber – Demon Love (04:32)
6. ASP & Chamber – The Paperhearted Ghost (04:43)
7. ASP & Chamber – A Tale of Real Love (05:16)
8. ASP & Chamber – Hunger (04:49)
9. ASP & Chamber – The Truth About Snow-White (04:00)
10. ASP & Chamber – She Wore Shadows (04:36)
11. ASP & Chamber – Und wir tanzten (Ungeschickte Liebesbriefe) (05:17)
12. ASP & Chamber – Once in a Lifetime, Part 2 (reprise) (02:44)

Disc 2
1. ASP & Chamber – Küss mich (06:24)
2. ASP & Chamber – Silence - Release (03:45)
3. ASP & Chamber – Solitude (03:40)
4. ASP & Chamber – Die Ballade von der Erweckung (08:47)
5. ASP & Chamber – Another Conversation (03:21)
6. ASP & Chamber – Sing Child (07:29)
7. ASP & Chamber – Ich will brennen (05:00)
8. ASP & Chamber – Toscana (06:14)
9. ASP & Chamber – Ride On (03:42)
10. ASP & Chamber – Hometown (03:01)
11. ASP & Chamber – Werben (04:53)
12. ASP & Chamber – Once in a Lifetime, Part 3 (Finale) (10:08)

Disc 3: Hier noch ein Titel
1. ASP & Chamber – Hässlich (02:25)
2. ASP & Chamber – Backstage (All Areas) (09:33)
3. ASP & Chamber – Paracetamolträume (08:37)
4. ASP & Chamber – Auszug aus „Tremendista“ (feat. Ralph Müller) (24:33)
5. ASP & Chamber – Campari O (02:39)

Disc 4
1. ASP & Chamber – Sicamore Trees (ASP soundcheck out-take) (01:34)
2. ASP & Chamber – Demon Love (04:35)
3. ASP & Chamber – The Truth About Snow-White (04:35)
4. ASP & Chamber – She Wore Shadows (05:19)
5. ASP & Chamber – Sing Child (07:49)
6. ASP, Chamber & Dritter Track Artist – Hometown (03:41)
7. ASP & Chamber – Hunger (04:34)
8. ASP & Chamber – Silence - Release (03:28)
9. ASP & Chamber – She Moved Through the Fair (ASP soundcheck out-take) (02:00)

More information: http://musicbrainz.org/release/79de4a0c-b469-4dfd-b23c-129462b741fb"""

        self.assertEqual(expected, visitor.visit(self.result))


class ApiVisitorV1Test(TestCase):

    def setUp(self):
        super(ApiVisitorV1Test, self).setUp()

        self.v = APIVisitorV1(description_format='plain', include_raw_data=True)

    def test_release_result_api_response(self):
        expected = {"raw_data": {"style": ["Alternative Rock"],
                                "format": "CD, Album, Limited Edition, Digibook CD, Compilation, Limited Edition",
                                "country": "Germany", "title": "Aus Der Tiefe", "label": [u"[Trisol] Music Group GmbH"],
                                "released": "01 Jul 2005", "catalog": [u"TRI 231 CD"], "discs": {
                    "disc_1": [["1", [], u"Beschw\u00f6rung", "06:31"], ["2", [], u"Willkommen Zur\u00fcck", "02:17"],
                               ["3", [], "Schwarzes Blut", "03:32"], ["4", [], "Im Dunklen Turm", "01:41"], ["5", [], "Me", "04:38"],
                               ["6", [], "Schattenschreie", "00:21"], ["7", [], "Hunger", "05:21"], ["8", [], "Fremde Erinnerungen", "01:12"],
                               ["9", [], "Ballade Von Der Erweckung", "08:53"], ["10", [], "Tiefenrausch", "04:05"],
                               ["11", [], "Schmetterling, Du Kleines Ding", "00:42"], ["12", [], "Ich Komm Dich Holn", "04:17"],
                               ["13", [], "Werben", "04:28"], ["14", [], "Aus Der Tiefe", "03:18"], ["15", [], "Spiegelaugen", "03:24"],
                               ["16", [], "Tiefenrausch (Reprise)", "01:07"], ["17", [], "Panik", "04:12"], ["18", [], "Spiegel", "05:31"]],
                    "disc_2": [["1", [], "Schwarzes Blut (Haltung Version)", "04:09"], ["2", [], "Werben (Subtil Edit)", "04:17"],
                               ["3", [], "Me (Single Version)", "03:45"],
                               ["4", [{"type": "Feature", "name": "Sara Noxx"}], "Tiefenrausch (Feat. Sara Noxx)", "04:05"],
                               ["5", [], "Hunger (Single Mix)", "04:19"], ["6", [], "Panik (Ganz Rauf-Verison)", "04:33"],
                               ["7", [], u"Beschw\u00f6rung (Siegeszug Instrumental)", "03:25"],
                               ["8", [], "Buch Des Vergessens (Unreines Spiegelsonett)", "01:55"],
                               ["9", [{"type": "Remixer", "name": "Umbra Et Imago"}], "Kokon (Brandneu-Remix Von Umbra Et Imago)", "04:39"],
                               ["10", [{"type": "Remixer", "name": "Blutengel"}], "Me (Me And You Remix Von Blutengel)", "05:44"],
                               ["11", [], "Und Wir Tanzten (Ungeschickte Liebesbriefe) (Live)", "05:47"],
                               ["12", [], "Ich Will Brennen (Live)", "06:09"], ["13", [], "Starfucker: In Der Folterkammer", "02:07"]]},
                                                    "link": "http://www.discogs.com/ASP-Aus-Der-Tiefe-Der-Schwarze-Schmetterling-IV/release/710517",
                                                    "artists": [{"type": "Main", "name": "ASP"}], "genre": ["Electronic", "Rock"]},
                     "description_format": "plain", "type": "release"}

        result = ReleaseResult()
        result.set_scraper_name(None)

        release_event = result.create_release_event()
        release_event.set_date('01 Jul 2005')
        release_event.set_country('Germany')
        result.append_release_event(release_event)

        result.set_format('CD, Album, Limited Edition, Digibook CD, Compilation, Limited Edition')

        label_id = result.create_label_id()
        label_id.set_label(u'[Trisol] Music Group GmbH')
        label_id.append_catalogue_nr(u'TRI 231 CD')
        result.append_label_id(label_id)

        result.set_title('Aus Der Tiefe')

        artist = result.create_artist()
        artist.set_name('ASP')
        artist.set_various(False)
        artist.append_type(result.ArtistTypes.MAIN)
        result.append_release_artist(artist)

        result.append_genre('Electronic')
        result.append_genre('Rock')

        result.append_style('Alternative Rock')

        result.set_url('http://www.discogs.com/ASP-Aus-Der-Tiefe-Der-Schwarze-Schmetterling-IV/release/710517')

        disc = result.create_disc()
        disc.set_number(1)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title(u'Beschw\xf6rung')
        track.set_length(391)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title(u'Willkommen Zur\xfcck')
        track.set_length(137)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Schwarzes Blut')
        track.set_length(212)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Im Dunklen Turm')
        track.set_length(101)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Me')
        track.set_length(278)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Schattenschreie')
        track.set_length(21)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title('Hunger')
        track.set_length(321)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Fremde Erinnerungen')
        track.set_length(72)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Ballade Von Der Erweckung')
        track.set_length(533)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Tiefenrausch')
        track.set_length(245)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Schmetterling, Du Kleines Ding')
        track.set_length(42)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Ich Komm Dich Holn')
        track.set_length(257)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title('Werben')
        track.set_length(268)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('14')
        track.set_title('Aus Der Tiefe')
        track.set_length(198)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('15')
        track.set_title('Spiegelaugen')
        track.set_length(204)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('16')
        track.set_title('Tiefenrausch (Reprise)')
        track.set_length(67)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('17')
        track.set_title('Panik')
        track.set_length(252)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('18')
        track.set_title('Spiegel')
        track.set_length(331)
        disc.append_track(track)

        result.append_disc(disc)

        disc = result.create_disc()
        disc.set_number(2)
        disc.set_title(None)

        track = disc.create_track()
        track.set_number('1')
        track.set_title('Schwarzes Blut (Haltung Version)')
        track.set_length(249)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('2')
        track.set_title('Werben (Subtil Edit)')
        track.set_length(257)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('3')
        track.set_title('Me (Single Version)')
        track.set_length(225)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('4')
        track.set_title('Tiefenrausch (Feat. Sara Noxx)')
        track.set_length(245)
        track_artist = result.create_artist()
        track_artist.set_name('Sara Noxx')
        track_artist.set_various(False)
        track_artist.append_type(result.ArtistTypes.FEATURING)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('5')
        track.set_title('Hunger (Single Mix)')
        track.set_length(259)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('6')
        track.set_title('Panik (Ganz Rauf-Verison)')
        track.set_length(273)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('7')
        track.set_title(u'Beschw\xf6rung (Siegeszug Instrumental)')
        track.set_length(205)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('8')
        track.set_title('Buch Des Vergessens (Unreines Spiegelsonett)')
        track.set_length(115)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('9')
        track.set_title('Kokon (Brandneu-Remix Von Umbra Et Imago)')
        track.set_length(279)
        track_artist = result.create_artist()
        track_artist.set_name('Umbra Et Imago')
        track_artist.set_various(False)
        track_artist.append_type(result.ArtistTypes.REMIXER)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('10')
        track.set_title('Me (Me And You Remix Von Blutengel)')
        track.set_length(344)
        track_artist = result.create_artist()
        track_artist.set_name('Blutengel')
        track_artist.set_various(False)
        track_artist.append_type(result.ArtistTypes.REMIXER)
        track.append_artist(track_artist)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('11')
        track.set_title('Und Wir Tanzten (Ungeschickte Liebesbriefe) (Live)')
        track.set_length(347)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('12')
        track.set_title('Ich Will Brennen (Live)')
        track.set_length(369)
        disc.append_track(track)

        track = disc.create_track()
        track.set_number('13')
        track.set_title('Starfucker: In Der Folterkammer')
        track.set_length(127)
        disc.append_track(track)

        result.append_disc(disc)

        self.assertDictContainsSubset(expected, self.v.visit(result))

    def test_list_result_api_response(self):
        result = ListResult()
        result.set_scraper_name('discogs')

        item = result.create_item()
        item.set_name('Armagedom / Bombenalarm - Armagedom / Bombenalarm')
        item.set_info(u'Hate Records | Hate 12 | 7", EP, Ltd, Spl | 2006 | Germany')
        item.set_query('http://www.discogs.com/Armagedom--Bombenalarm-Armagedom-Bombenalarm/release/986661')
        item.set_url('http://www.discogs.com/Armagedom--Bombenalarm-Armagedom-Bombenalarm/release/986661')
        result.append_item(item)

        item = result.create_item()
        item.set_name('Temporal Sluts / Humpers, The - A Touching Date')
        item.set_info(u'Hate Records | Hate 1 | 10", Red | 1995 | Italy')
        item.set_query('http://www.discogs.com/Temporal-Sluts-Humpers-A-Touching-Date/release/2521150')
        item.set_url('http://www.discogs.com/Temporal-Sluts-Humpers-A-Touching-Date/release/2521150')
        result.append_item(item)

        item = result.create_item()
        item.set_name('Temporal Sluts / Humpers, The - A Touching Date')
        item.set_info(u'Hate Records | Hate 1 | 10" | 1995 | Italy')
        item.set_query('http://www.discogs.com/Temporal-Sluts-Humpers-A-Touching-Date/release/3431254')
        item.set_url('http://www.discogs.com/Temporal-Sluts-Humpers-A-Touching-Date/release/3431254')
        result.append_item(item)

        item = result.create_item()
        item.set_name('Temporal Sluts / Humpers, The - A Touching Date')
        item.set_info(u'Hate Records | Hate 1 | 10", RP | 1998 | Italy')
        item.set_query('http://www.discogs.com/Temporal-Sluts-Humpers-A-Touching-Date/release/3431260')
        item.set_url('http://www.discogs.com/Temporal-Sluts-Humpers-A-Touching-Date/release/3431260')
        result.append_item(item)

        item = result.create_item()
        item.set_name('Trend, The - Batman Live At Budokan')
        item.set_info(u'Hate Records | Hate 23 | LP | 2000 | Italy')
        item.set_query('http://www.discogs.com/Trend-Batman-Live-At-Budokan/release/2551436')
        item.set_url('http://www.discogs.com/Trend-Batman-Live-At-Budokan/release/2551436')
        result.append_item(item)

        item = result.create_item()
        item.set_name('Trend, The - Batman Live At Budokan And The Complete Trend')
        item.set_info(u'Hate Records | Hate 27 | CD, Comp | 2000 | Italy')
        item.set_query('http://www.discogs.com/Trend-Batman-Live-At-Budokan-And-The-Complete-Trend/release/3612061')
        item.set_url('http://www.discogs.com/Trend-Batman-Live-At-Budokan-And-The-Complete-Trend/release/3612061')
        result.append_item(item)

        item = result.create_item()
        item.set_name('Dark Orchestra, The - Beauty And The Beast')
        item.set_info(u'Hate System | HATE 06 | CDr, Album | 2001 | Germany')
        item.set_query('http://www.discogs.com/Dark-Orchestra-Beauty-And-The-Beast/release/226497')
        item.set_url('http://www.discogs.com/Dark-Orchestra-Beauty-And-The-Beast/release/226497')
        result.append_item(item)

        item = result.create_item()
        item.set_name(u'Skitkids - Bes\xf6ket Vid Krubban')
        item.set_info(u'Hate Records | HATE 18 | 12", Whi | 2008 | Germany')
        item.set_query(u'http://www.discogs.com/Skitkids-Bes\xf6ket-Vid-Krubban/release/3641975')
        item.set_url(u'http://www.discogs.com/Skitkids-Bes\xf6ket-Vid-Krubban/release/3641975')
        result.append_item(item)

        item = result.create_item()
        item.set_name(u'Skitkids - Bes\xf6ket Vid Krubban')
        item.set_info(u'Hate Records | HATE 18 | 12", Gat | 2008 | Germany')
        item.set_query(u'http://www.discogs.com/Skitkids-Bes\xf6ket-Vid-Krubban/release/1743168')
        item.set_url(u'http://www.discogs.com/Skitkids-Bes\xf6ket-Vid-Krubban/release/1743168')
        result.append_item(item)

        item = result.create_item()
        item.set_name('Intellectuals, The - Black! Domina! Now!')
        item.set_info(u'Hate Records | Hate 28 | LP, Album, Ltd | 2004 | Italy')
        item.set_query('http://www.discogs.com/Intellectuals-Black-Domina-Now/release/2738867')
        item.set_url('http://www.discogs.com/Intellectuals-Black-Domina-Now/release/2738867')
        result.append_item(item)

        item = result.create_item()
        item.set_name('Bombenalarm / Dean Dirg - Bombenalarm / Dean Dirg')
        item.set_info(u'Hate Records | HATE 08 | 7" | 2006 | Germany')
        item.set_query('http://www.discogs.com/Bombenalarm-Dean-Dirg-Bombenalarm-Dean-Dirg/release/1744380')
        item.set_url('http://www.discogs.com/Bombenalarm-Dean-Dirg-Bombenalarm-Dean-Dirg/release/1744380')
        result.append_item(item)

        item = result.create_item()
        item.set_name("Two Bo's Maniacs - Bo Saves!")
        item.set_info(u'Hate Records | Hate 13 | 10" | 1999 | Italy')
        item.set_query('http://www.discogs.com/Two-Bos-Maniacs-Bo-Saves/release/2738835')
        item.set_url('http://www.discogs.com/Two-Bos-Maniacs-Bo-Saves/release/2738835')
        result.append_item(item)

        item = result.create_item()
        item.set_name('Dirtbombs, The - Brucia I Cavi')
        item.set_info(u'Hate Records | Hate 20 | 7", EP | 2000 | Italy')
        item.set_query('http://www.discogs.com/Dirtbombs-Brucia-I-Cavi/release/3521579')
        item.set_url('http://www.discogs.com/Dirtbombs-Brucia-I-Cavi/release/3521579')
        result.append_item(item)

        item = result.create_item()
        item.set_name('Dirtbombs, The - Brucia I Cavi')
        item.set_info(u'Hate Records | Hate 20 | 7", EP, Bro | 2000 | Italy')
        item.set_query('http://www.discogs.com/Dirtbombs-Brucia-I-Cavi/release/3521591')
        item.set_url('http://www.discogs.com/Dirtbombs-Brucia-I-Cavi/release/3521591')
        result.append_item(item)

        item = result.create_item()
        item.set_name('Cactus (11) - Cactus')
        item.set_info(u'Hate Records | Hate 31 | LP, Ltd, Album | 2006 | Italy')
        item.set_query('http://www.discogs.com/Cactus-Cactus/release/3578968')
        item.set_url('http://www.discogs.com/Cactus-Cactus/release/3578968')
        result.append_item(item)

        item = result.create_item()
        item.set_name('Gags, The - Criss Cross (1979-1981)')
        item.set_info(u'Hate Records | Hate 29 | LP, Comp, Ltd | 2004 | Italy')
        item.set_query('http://www.discogs.com/Gags-Criss-Cross-1979-1981/release/2749672')
        item.set_url('http://www.discogs.com/Gags-Criss-Cross-1979-1981/release/2749672')
        result.append_item(item)

        item = result.create_item()
        item.set_name('Fucked Up - Dangerous Fumes')
        item.set_info(u'Hate Records | Hate 10 | 7", Single | 2006 | Germany')
        item.set_query('http://www.discogs.com/Fucked-Up-Dangerous-Fumes/release/911494')
        item.set_url('http://www.discogs.com/Fucked-Up-Dangerous-Fumes/release/911494')
        result.append_item(item)

        item = result.create_item()
        item.set_name('Runes Order - Dawn Of New Past')
        item.set_info(u'Hate Productions | HATE 08 | Cass, Album, 1st + Box, Ltd, C90 | 1994 | Italy')
        item.set_query('http://www.discogs.com/Runes-Order-Dawn-Of-New-Past/release/868917')
        item.set_url('http://www.discogs.com/Runes-Order-Dawn-Of-New-Past/release/868917')
        result.append_item(item)

        item = result.create_item()
        item.set_name('Homoplastik - Death In The Car')
        item.set_info(u'Hate Records | Hate 16 | 7" | 1999 | Italy')
        item.set_query('http://www.discogs.com/Homoplastik-Death-In-The-Car/release/1058890')
        item.set_url('http://www.discogs.com/Homoplastik-Death-In-The-Car/release/1058890')
        result.append_item(item)

        item = result.create_item()
        item.set_name('Evil (2) - ...Evil Storming Onwards To The Battlefield...')
        item.set_info(u'Pure Evil Productions | HATE 04 | Cass, S/Sided | 1997 | Brazil')
        item.set_query('http://www.discogs.com/Evil-Evil-Storming-Onwards-To-The-Battlefield/release/385183')
        item.set_url('http://www.discogs.com/Evil-Evil-Storming-Onwards-To-The-Battlefield/release/385183')
        result.append_item(item)

        expected = {
            "release_count": 20,
            "releases": {
                "discogs": [
                    {
                        "info": u"Hate Records | Hate 12 | 7\", EP, Ltd, Spl | 2006 | Germany",
                        "name": "Armagedom / Bombenalarm - Armagedom / Bombenalarm",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FArmagedom--Bombenalarm-Armagedom-Bombenalarm%2Frelease%2F986661",
                        "release_url": "http://www.discogs.com/Armagedom--Bombenalarm-Armagedom-Bombenalarm/release/986661"
                    },
                    {
                        "info": "Hate Records | Hate 1 | 10\", Red | 1995 | Italy",
                        "name": "Temporal Sluts / Humpers, The - A Touching Date",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FTemporal-Sluts-Humpers-A-Touching-Date%2Frelease%2F2521150",
                        "release_url": "http://www.discogs.com/Temporal-Sluts-Humpers-A-Touching-Date/release/2521150"
                    },
                    {
                        "info": "Hate Records | Hate 1 | 10\" | 1995 | Italy",
                        "name": "Temporal Sluts / Humpers, The - A Touching Date",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FTemporal-Sluts-Humpers-A-Touching-Date%2Frelease%2F3431254",
                        "release_url": "http://www.discogs.com/Temporal-Sluts-Humpers-A-Touching-Date/release/3431254"
                    },
                    {
                        "info": "Hate Records | Hate 1 | 10\", RP | 1998 | Italy",
                        "name": "Temporal Sluts / Humpers, The - A Touching Date",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FTemporal-Sluts-Humpers-A-Touching-Date%2Frelease%2F3431260",
                        "release_url": "http://www.discogs.com/Temporal-Sluts-Humpers-A-Touching-Date/release/3431260"
                    },
                    {
                        "info": "Hate Records | Hate 23 | LP | 2000 | Italy",
                        "name": "Trend, The - Batman Live At Budokan",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FTrend-Batman-Live-At-Budokan%2Frelease%2F2551436",
                        "release_url": "http://www.discogs.com/Trend-Batman-Live-At-Budokan/release/2551436"
                    },
                    {
                        "info": "Hate Records | Hate 27 | CD, Comp | 2000 | Italy",
                        "name": "Trend, The - Batman Live At Budokan And The Complete Trend",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FTrend-Batman-Live-At-Budokan-And-The-Complete-Trend%2Frelease%2F3612061",
                        "release_url": "http://www.discogs.com/Trend-Batman-Live-At-Budokan-And-The-Complete-Trend/release/3612061"
                    },
                    {
                        "info": "Hate System | HATE 06 | CDr, Album | 2001 | Germany",
                        "name": "Dark Orchestra, The - Beauty And The Beast",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FDark-Orchestra-Beauty-And-The-Beast%2Frelease%2F226497",
                        "release_url": "http://www.discogs.com/Dark-Orchestra-Beauty-And-The-Beast/release/226497"
                    },
                    {
                        "info": "Hate Records | HATE 18 | 12\", Whi | 2008 | Germany",
                        "name": u"Skitkids - Bes\u00f6ket Vid Krubban",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FSkitkids-Bes%C3%B6ket-Vid-Krubban%2Frelease%2F3641975",
                        "release_url": u"http://www.discogs.com/Skitkids-Bes\u00f6ket-Vid-Krubban/release/3641975"
                    },
                    {
                        "info": "Hate Records | HATE 18 | 12\", Gat | 2008 | Germany",
                        "name": u"Skitkids - Bes\u00f6ket Vid Krubban",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FSkitkids-Bes%C3%B6ket-Vid-Krubban%2Frelease%2F1743168",
                        "release_url": u"http://www.discogs.com/Skitkids-Bes\u00f6ket-Vid-Krubban/release/1743168"
                    },
                    {
                        "info": "Hate Records | Hate 28 | LP, Album, Ltd | 2004 | Italy",
                        "name": "Intellectuals, The - Black! Domina! Now!",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FIntellectuals-Black-Domina-Now%2Frelease%2F2738867",
                        "release_url": "http://www.discogs.com/Intellectuals-Black-Domina-Now/release/2738867"
                    },
                    {
                        "info": "Hate Records | HATE 08 | 7\" | 2006 | Germany",
                        "name": "Bombenalarm / Dean Dirg - Bombenalarm / Dean Dirg",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FBombenalarm-Dean-Dirg-Bombenalarm-Dean-Dirg%2Frelease%2F1744380",
                        "release_url": "http://www.discogs.com/Bombenalarm-Dean-Dirg-Bombenalarm-Dean-Dirg/release/1744380"
                    },
                    {
                        "info": "Hate Records | Hate 13 | 10\" | 1999 | Italy",
                        "name": "Two Bo's Maniacs - Bo Saves!",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FTwo-Bos-Maniacs-Bo-Saves%2Frelease%2F2738835",
                        "release_url": "http://www.discogs.com/Two-Bos-Maniacs-Bo-Saves/release/2738835"
                    },
                    {
                        "info": "Hate Records | Hate 20 | 7\", EP | 2000 | Italy",
                        "name": "Dirtbombs, The - Brucia I Cavi",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FDirtbombs-Brucia-I-Cavi%2Frelease%2F3521579",
                        "release_url": "http://www.discogs.com/Dirtbombs-Brucia-I-Cavi/release/3521579"
                    },
                    {
                        "info": "Hate Records | Hate 20 | 7\", EP, Bro | 2000 | Italy",
                        "name": "Dirtbombs, The - Brucia I Cavi",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FDirtbombs-Brucia-I-Cavi%2Frelease%2F3521591",
                        "release_url": "http://www.discogs.com/Dirtbombs-Brucia-I-Cavi/release/3521591"
                    },
                    {
                        "info": "Hate Records | Hate 31 | LP, Ltd, Album | 2006 | Italy",
                        "name": "Cactus (11) - Cactus",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FCactus-Cactus%2Frelease%2F3578968",
                        "release_url": "http://www.discogs.com/Cactus-Cactus/release/3578968"
                    },
                    {
                        "info": "Hate Records | Hate 29 | LP, Comp, Ltd | 2004 | Italy",
                        "name": "Gags, The - Criss Cross (1979-1981)",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FGags-Criss-Cross-1979-1981%2Frelease%2F2749672",
                        "release_url": "http://www.discogs.com/Gags-Criss-Cross-1979-1981/release/2749672"
                    },
                    {
                        "info": "Hate Records | Hate 10 | 7\", Single | 2006 | Germany",
                        "name": "Fucked Up - Dangerous Fumes",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FFucked-Up-Dangerous-Fumes%2Frelease%2F911494",
                        "release_url": "http://www.discogs.com/Fucked-Up-Dangerous-Fumes/release/911494"
                    },
                    {
                        "info": "Hate Productions | HATE 08 | Cass, Album, 1st + Box, Ltd, C90 | 1994 | Italy",
                        "name": "Runes Order - Dawn Of New Past",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FRunes-Order-Dawn-Of-New-Past%2Frelease%2F868917",
                        "release_url": "http://www.discogs.com/Runes-Order-Dawn-Of-New-Past/release/868917"
                    },
                    {
                        "info": "Hate Records | Hate 16 | 7\" | 1999 | Italy",
                        "name": "Homoplastik - Death In The Car",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FHomoplastik-Death-In-The-Car%2Frelease%2F1058890",
                        "release_url": "http://www.discogs.com/Homoplastik-Death-In-The-Car/release/1058890"
                    },
                    {
                        "info": "Pure Evil Productions | HATE 04 | Cass, S/Sided | 1997 | Brazil",
                        "name": "Evil (2) - ...Evil Storming Onwards To The Battlefield...",
                        "query_url": "/api/v1/query/?input=http%3A%2F%2Fwww.discogs.com%2FEvil-Evil-Storming-Onwards-To-The-Battlefield%2Frelease%2F385183",
                        "release_url": "http://www.discogs.com/Evil-Evil-Storming-Onwards-To-The-Battlefield/release/385183"
                    }
                ]
            },
            "type": "release_list"
        }

        self.assertEqual(expected, self.v.visit(result))

    def test_empty_list_result_api_response(self):
        result = ListResult()
        result.set_scraper_name('Something')

        expected = {
            "release_count": 0,
            "releases": {},
            "type": "release_list"
        }

        self.assertEqual(expected, self.v.visit(result))